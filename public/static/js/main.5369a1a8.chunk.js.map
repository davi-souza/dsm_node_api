{"version":3,"sources":["themes/index.js","components/AppBar/AppBar.js","contexts/QuotationContext.js","libs/fetch/upload.js","components/QuotationUpload/QuotationUpload.js","components/QuotationItemEdit/Material.js","components/QuotationItemEdit/HeatTreatment.js","components/QuotationItemEdit/SuperficialTreatment.js","libs/format/finishing.js","components/QuotationItemEdit/Finishing.js","libs/format/tolerance.js","components/QuotationItemEdit/Tolerance.js","components/QuotationItemEdit/Screw.js","components/QuotationItemEdit/Marking.js","components/QuotationItemEdit/Report.js","components/QuotationItemEdit/Knurled.js","components/QuotationItemEdit/QuotationItemEdit.js","components/QuotationItem/HeaderComponent.js","components/BaseConfig/BaseConfig.js","libs/format/screw.js","libs/format/marking.js","components/QuotationItem/ConfigSummary.js","libs/format/report.js","libs/format/number.js","components/QuotationItem/FooterComponent.js","components/QuotationItem/QuotationItem.js","components/QuotationItemList/QuotationItemList.js","contexts/AppContext.js","libs/errors/index.js","libs/fetch/handler.js","libs/fetch/material.js","libs/fetch/part.js","views/Quotation/Quotation.js","libs/fetch/user.js","libs/localStorage/index.js","libs/indexedDB/userDB.js","libs/indexedDB/index.js","App.js","serviceWorker.js","index.js"],"names":["primary","light","main","dark","contrastText","borders","styles","appBar","backgroundColor","borderBottom","color","marginBottom","withStyles","classes","AppBar","elevation","position","className","Toolbar","variant","Typography","createContext","uploadFile","file","a","formData","FormData","append","fetch","method","body","response","json","console","error","data","status","message","uploadButton","fontSize","height","inputEl","React","useRef","useContext","QuotationContext","itemsLoading","setItemsLoading","addItem","event","target","files","Box","component","id","type","name","ref","onChange","Button","disabled","fullWidth","onClick","current","click","Materials","materialType","setMaterialType","useState","selectedMaterialType","setSelectedMaterialType","options","setOptions","materials","useEffect","label","value","map","m","material_types","mt","flat","Grid","container","spacing","item","xs","newMaterialType","materialTypeId","findMaterialType","HeatTreatment","props","heatTreatments","setHeatTreatments","selectedHeatTreatment","setSelectedHeatTreatment","heatTreatment","setHeatTreatment","material","heat_treatments","materialHeatTreatments","concat","ht","newHeatTreatment","find","SuperficialTreatment","superficialTreatments","setSuperficialTreatments","selectedSuperficialTreatment","setSelectedSuperficialTreatment","superficialTreatment","setSuperficialTreatment","superficial_treatments","materialSuperficialTreatments","newSuperficialTreatment","renderFinishing","raw","Finishing","finishing","setFinishing","selectedFinishing","setSelectedFinishing","FormControl","RadioGroup","o","key","FormControlLabel","control","Radio","renderTolerance","String","fromCharCode","Tolerance","tolerance","setTolerance","selectedTolerance","setSelectedTolerance","alignItems","renderScrewType","Screw","screw","setScrew","selectedScrew","setSelectedScrew","handleScrewAmountChange","oldValue","amount","newValue","isNaN","parseInt","newScrewType","TextField","helperText","toString","Marking","marking","setMarking","selectedMarking","setSelectedMarking","newMarking","renderReport","Report","report","setReport","selectedReport","setSelectedReport","renderKnurled","Knurled","knurled","setKnurled","selectedKnurled","setSelectedKnurled","dialogContent","padding","minHeight","maxHeight","overflowY","contentContainer","configItem","configContainer","width","auxItem","open","onCancel","material_type","heat_treatment","superficial_treatment","savePartConfigChanges","fullScreen","useMediaQuery","hasChanged","JSON","stringify","ConfigEditComponents","Material","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","DialogTitle","disableTypography","DialogContent","c","cIndex","Fragment","Divider","DialogActions","part_id","material_type_id","heat_treatment_id","superficial_treatment_id","headerContainer","itemName","fontWeight","buttonIcon","marginRight","index","editDialogOpen","setEditDialogOpen","removeItem","direction","justify","size","title","window","confirm","paddingRight","containerLabel","valueToRender","renderScrew","renderMarking","summaryContainer","configs","wrap","config","BaseConfig","renderNumber","formatter","Intl","NumberFormat","style","currency","number","toFixed","format","footerContainer","amountLabel","amountInput","border","borderRadius","textAlign","unit_price","amountToRender","setAmountToRender","handleCommitAmountChange","screw_amount","onBlur","onKeyPress","CircularProgress","quotationItem","contentGrid","minWidth","itemImg","configSummary","flexGrow","alt","src","uploadIcon","emptyMessage","loadingGrid","basketGrid","bottom","marginLeft","items","length","FetchError","Error","handleGraphQLResponse","res","dataKey","ok","errors","extensions","materialsQuery","trim","credentials","headers","query","changePartOptionsQuery","input","variables","mockItems","Array","fill","parse","Quotation","setItems","setMaterials","handleOpenSnackbar","AppContext","getMaterials","then","Provider","changePartConfig","newItems","filter","_","i","Container","loginQuery","registerUserQuery","email","password","warn","phone_number","addresses","hasLocalStorage","setUserCredentials","jwt","localStorage","setItem","setUserName","setUserEmail","setUserJwt","saveUserAddresses","userEmail","DBName","DBVersion","Promise","resolve","reject","request","indexedDB","onerror","onsuccess","result","onupgradeneeded","userStore","createObjectStore","keyPath","createIndex","unique","idb","db","store","transaction","objectStore","forEach","ad","putRequest","put","err","App","user","setUser","userLoading","setUserLoading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleCloseSnackbar","userLogin","login","userRegister","phoneNumber","registerUser","path","QuotationView","render","to","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","Boolean","location","hostname","match","platformTheme","createMuiTheme","palette","secondary","ReactDOM","ThemeProvider","theme","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5369a1a8.chunk.js","sourcesContent":["export const primary = {\n\tlight: '#4d586b',\n\tmain: '#242f40', // rgba(36, 47, 64, 1)\n\tdark: '#00051a',\n\tcontrastText: '#ffffff',\n};\n\nexport const borders = {\n\tprimary: {\n\t\tmain: `${primary.main}30`,\n\t},\n};\n\nexport const secondary = {\n\tlight: '#ffd56b',\n\tmain: '#cca43b',\n\tdark: '#987600',\n\tcontrastText: '#000000',\n};\n\nexport const lightGray = {\n\tmain: '#e5e5e5',\n\tcontrastText: '#000000',\n};\n\nexport const darkGray = {\n\tmain: '#363636',\n\tcontrastText: '#ffffff',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { primary, borders } from '../../themes';\n\nfunction AppBarComponent({classes}) {\n\treturn (\n\t\t<AppBar elevation={0} position=\"static\" className={classes.appBar}>\n\t\t\t<Toolbar variant=\"dense\">\n\t\t\t\t<Typography variant=\"h6\">Mech4u</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nconst styles = {\n\tappBar: {\n\t\tbackgroundColor: '#ffffff',\n\t\tborderBottom: `1px solid ${borders.primary.main}`,\n\t\tcolor: primary.main,\n\t\tmarginBottom: '1rem',\n\t},\n};\n\nAppBarComponent.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(AppBarComponent);\n","import {createContext} from 'react';\n\nexport default createContext();\n","export async function uploadFile(file) {\n\tconst formData = new FormData();\n\n\tformData.append('file', file);\n\n\ttry {\n\t\tconst response = await fetch('/api/file/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t});\n\n\t\treturn await response.json();\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Não foi possível fazer upload do arquivo',\n\t\t\t}\n\t\t};\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { uploadFile } from '../../libs/fetch/upload';\nimport './QuotationUpload.scss';\n\n\nfunction QuotationUpload({classes}) {\n\tconst inputEl = React.useRef(null);\n\tconst {\n\t\titemsLoading,\n\t\tsetItemsLoading,\n\t\taddItem,\n\t} = React.useContext(QuotationContext);\n\n\tasync function handleChange(event) {\n\t\tsetItemsLoading(true);\n\n\t\ttry {\n\t\t\tconst {data} = await uploadFile(event.target.files[0]);\n\n\t\t\taddItem({\n\t\t\t\t...data,\n\t\t\t});\n\t\t} catch (err) {\n\t\t} finally {\n\t\t\tsetItemsLoading(false);\n\t\t}\n\t}\n\n\tfunction openFileInput() {\n\t\tinputEl.current.click();\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tcomponent=\"div\"\n\t\t\tid=\"quotation-upload-wrapper\"\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"file\"\n\t\t\t\tname=\"file\"\n\t\t\t\tid=\"quotation-upload-input\"\n\t\t\t\tref={inputEl}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclassName={classes.uploadButton}\n\t\t\t\tdisabled={itemsLoading}\n\t\t\t\tfullWidth\n\t\t\t\tonClick={openFileInput}\n\t\t\t\tvariant=\"text\"\n\t\t\t>\n\t\t\t\tAdicionar Arquivo\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n\nconst styles = {\n\tuploadButton: {\n\t\tfontSize: '1.25rem',\n\t\theight: '5rem',\n\t},\n};\n\nQuotationUpload.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(QuotationUpload);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction Materials({materialType, setMaterialType}) {\n\tconst [\n\t\tselectedMaterialType,\n\t\tsetSelectedMaterialType\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tconst {id, name} = materialType;\n\t\tsetSelectedMaterialType({\n\t\t\tlabel: name,\n\t\t\tvalue: id,\n\t\t});\n\t}, [materialType]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\tmaterials.map(m => m.material_types.map(mt => ({\n\t\t\t\tlabel: mt.name,\n\t\t\t\tvalue: mt.id,\n\t\t\t}))).flat(1)\n\t\t);\n\t}, [materials]);\n\n\tfunction handleMaterialTypeChange(newMaterialType) {\n\t\tsetMaterialType(findMaterialType(materials, newMaterialType.value));\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tMaterial\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedMaterialType}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleMaterialTypeChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction findMaterialType(materials, materialTypeId) {\n\tfor (const m of materials) {\n\t\tfor (const mt of m.material_types) {\n\t\t\tif (mt.id === materialTypeId) {\n\t\t\t\treturn {...mt};\n\t\t\t}\n\t\t}\n\t}\n}\n\nMaterials.propTypes = {\n\tmaterialType: PropTypes.object.isRequired,\n\tsetMaterialType: PropTypes.func.isRequired,\n};\n\nexport default Materials;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction HeatTreatment(props) {\n\tconst [heatTreatments, setHeatTreatments] = React.useState([]);\n\tconst [\n\t\tselectedHeatTreatment,\n\t\tsetSelectedHeatTreatment\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\tconst {\n\t\tmaterialTypeId,\n\t\theatTreatment,\n\t\tsetHeatTreatment,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetHeatTreatments(materialHeatTreatments(materials, materialTypeId));\n\t}, [materialTypeId, materials]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\t[{label:'Nenhum', value: null}].concat(\n\t\t\t\theatTreatments.map(ht => ({\n\t\t\t\t\tlabel: ht.name,\n\t\t\t\t\tvalue: ht.id,\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t}, [heatTreatments]);\n\n\tReact.useEffect(() => {\n\t\tif (!heatTreatment) {\n\t\t\tsetSelectedHeatTreatment({\n\t\t\t\tlabel: 'Nenhum',\n\t\t\t\tvalue: null,\n\t\t\t});\n\t\t} else {\n\t\t\tsetSelectedHeatTreatment({\n\t\t\t\tlabel: heatTreatment.name,\n\t\t\t\tvalue: heatTreatment.id,\n\t\t\t});\n\t\t}\n\t}, [heatTreatment]);\n\t\n\tfunction handleHeatTreatmentChange(newHeatTreatment) {\n\t\tif (newHeatTreatment.value === null) {\n\t\t\tsetHeatTreatment(null);\n\t\t} else {\n\t\t\tsetHeatTreatment(\n\t\t\t\theatTreatments.find(ht => ht.id === newHeatTreatment.value)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tTratamento Térmico\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedHeatTreatment}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleHeatTreatmentChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction materialHeatTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.heat_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nHeatTreatment.propTypes = {\n\tmaterialTypeId: PropTypes.string.isRequired,\n\theatTreatment: PropTypes.object,\n\tsetHeatTreatment: PropTypes.func.isRequired,\n};\n\nexport default HeatTreatment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction SuperficialTreatment(props) {\n\tconst [superficialTreatments, setSuperficialTreatments] = React.useState([]);\n\tconst [\n\t\tselectedSuperficialTreatment,\n\t\tsetSelectedSuperficialTreatment\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\tconst {\n\t\tmaterialTypeId,\n\t\tsuperficialTreatment,\n\t\tsetSuperficialTreatment,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetSuperficialTreatments(materialSuperficialTreatments(materials, materialTypeId));\n\t}, [materialTypeId, materials]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\t[{label:'Nenhum', value: null}].concat(\n\t\t\t\tsuperficialTreatments.map(ht => ({\n\t\t\t\t\tlabel: ht.name,\n\t\t\t\t\tvalue: ht.id,\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t}, [superficialTreatments]);\n\n\tReact.useEffect(() => {\n\t\tif (!superficialTreatment) {\n\t\t\tsetSelectedSuperficialTreatment({\n\t\t\t\tlabel: 'Nenhum',\n\t\t\t\tvalue: null,\n\t\t\t});\n\t\t} else {\n\t\t\tsetSelectedSuperficialTreatment({\n\t\t\t\tlabel: superficialTreatment.name,\n\t\t\t\tvalue: superficialTreatment.id,\n\t\t\t});\n\t\t}\n\t}, [superficialTreatment]);\n\t\n\tfunction handleSuperficialTreatmentChange(newSuperficialTreatment) {\n\t\tif (newSuperficialTreatment.value === null) {\n\t\t\tsetSuperficialTreatment(null);\n\t\t} else {\n\t\t\tsetSuperficialTreatment(\n\t\t\t\tsuperficialTreatments.find(ht => ht.id === newSuperficialTreatment.value)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tTratamento Superficial\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedSuperficialTreatment}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleSuperficialTreatmentChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction materialSuperficialTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.superficial_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nSuperficialTreatment.propTypes = {\n\tmaterialTypeId: PropTypes.string.isRequired,\n\tsuperficialTreatment: PropTypes.object,\n\tsetSuperficialTreatment: PropTypes.func.isRequired,\n};\n\nexport default SuperficialTreatment;\n","/**\n * The \"Finishing\" config of the part comes as a ENUM\n * It is necessary to translate/format it so the user\n * can read the value\n *\n * Possible values for finishing:\n * - STANDARD -> Padrão - 3.2 Ra\n * - RECTIFIED -> Retificado - 1.6 Ra\n * - POLISHED -> Polido - 0.8 Ra\n * @param {string} raw\tFinishing enum\n * @return {string}\t\tFinishing translated/formatted\n */\nexport function renderFinishing(raw) {\n\tswitch (raw) {\n\t\tcase 'PRECISION':\n\t\t\treturn 'Com precisão - 1.6 Ra';\n\t\tcase 'RECTIFIED':\n\t\t\treturn 'Retificado - 0.8 Ra';\n\t\tcase 'POLISHED':\n\t\t\treturn 'Polido - 0.4 Ra';\n\t\tdefault:\n\t\t\treturn 'Padrão - 3.2 Ra';\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { renderFinishing } from '../../libs/format/finishing';\n\nfunction Finishing({finishing, setFinishing}) {\n\tconst [\n\t\tselectedFinishing,\n\t\tsetSelectedFinishing\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (finishing === null) {\n\t\t\tsetSelectedFinishing(options[0]);\n\t\t} else {\n\t\t\tsetSelectedFinishing(finishing);\n\t\t}\n\t}, [finishing]);\n\n\tfunction handleFinishingChange(event) {\n\t\tsetFinishing(event.target.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tAcabamento\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedFinishing}\n\t\t\t\t\t\tonChange={handleFinishingChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\tkey={'select-finishing-' + o}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderFinishing(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'STANDARD',\n\t'PRECISION',\n\t'RECTIFIED',\n\t'POLISHED',\n];\n\nFinishing.propTypes = {\n\tfinishing: PropTypes.string,\n\tsetFinishing: PropTypes.func.isRequired,\n};\n\nexport default Finishing;\n","export function renderTolerance(raw) {\n\tswitch (raw) {\n\t\tcase 'MEDIUM':\n\t\t\treturn `Entre ${String.fromCharCode(177)}0.09mm e ${String.fromCharCode(177)}0.14mm`;\n\t\tcase 'LOW':\n\t\t\treturn `Entre ${String.fromCharCode(177)}0.03mm e ${String.fromCharCode(177)}0.08mm`;\n\t\tcase 'VERY_LOW':\n\t\t\treturn `Menor que ${String.fromCharCode(177)}0.03mm`;\n\t\tdefault:\n\t\t\treturn `Maior que ${String.fromCharCode(177)}0.14mm`;\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { renderTolerance } from '../../libs/format/tolerance';\n\nfunction Tolerance({tolerance, setTolerance}) {\n\tconst [\n\t\tselectedTolerance,\n\t\tsetSelectedTolerance\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (tolerance === null) {\n\t\t\tsetSelectedTolerance(options[0]);\n\t\t} else {\n\t\t\tsetSelectedTolerance(tolerance);\n\t\t}\n\t}, [tolerance]);\n\n\tfunction handleToleranceChange(event) {\n\t\tsetTolerance(event.target.value);\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tMenor Tolerância\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\tvalue={selectedTolerance}\n\t\t\t\t\t\t\t\tonChange={handleToleranceChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} key={'select-tolerance-' + o}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={renderTolerance(o)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'HIGH',\n\t'MEDIUM',\n\t'LOW',\n\t'VERY_LOW',\n];\n\nTolerance.propTypes = {\n\ttolerance: PropTypes.string,\n\tsetTolerance: PropTypes.func.isRequired,\n};\n\nexport default Tolerance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Screw({screw, setScrew}) {\n\tconst [\n\t\tselectedScrew,\n\t\tsetSelectedScrew,\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (screw === null) {\n\t\t\tsetSelectedScrew(options[0]);\n\t\t} else {\n\t\t\tsetSelectedScrew(\n\t\t\t\toptions.find(o => o === screw.type)\n\t\t\t);\n\t\t}\n\t}, [screw]);\n\n\tfunction handleScrewTypeChange(event) {\n\t\tconst newScrewType = event.target.value;\n\n\t\tif (newScrewType === 'NONE') {\n\t\t\tsetScrew(null);\n\t\t} else {\n\t\t\tsetScrew({\n\t\t\t\ttype: newScrewType,\n\t\t\t\tamount: (screw && newScrewType === 'INTERNAL') ? screw.amount : 0,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleScrewAmountChange(event) {\n\t\tconst oldValue = screw ? screw.amount : 0;\n\t\tlet newValue = event.target.value;\n\n\t\tif (newValue === '') {\n\t\t\tnewValue = 0;\n\t\t} else if (isNaN(newValue)) {\n\t\t\tnewValue = oldValue;\n\t\t} else {\n\t\t\tnewValue = parseInt(newValue, 10);\n\t\t}\n\n\t\tsetScrew({\n\t\t\ttype: screw.type,\n\t\t\tamount: newValue,\n\t\t});\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tRoscas\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\tvalue={selectedScrew}\n\t\t\t\t\t\t\t\tonChange={handleScrewTypeChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} key={'select-screw-type-' + o}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={renderScrewType(o)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\to === 'INTERNAL' && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={screw === null || screw.type === 'EXTERNAL'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(screw && screw.type === 'INTERNAL') ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(screw.amount === 0)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText=\"Número de roscas internas\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleScrewAmountChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(screw && screw.amount !== 0) ?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrew.amount.toString()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction renderScrewType(raw) {\n\tif (raw === 'INTERNAL') {\n\t\treturn 'Interna';\n\t} else if (raw === 'EXTERNAL') {\n\t\treturn 'Externa';\n\t}\n\n\treturn 'Nenhuma';\n}\n\nconst options = [\n\t'NONE',\n\t'EXTERNAL',\n\t'INTERNAL',\n];\n\nScrew.propTypes = {\n\tclasses: PropTypes.object,\n\tscrew: PropTypes.exact({\n\t\ttype: PropTypes.oneOf(['EXTERNAL', 'INTERNAL']).isRequired,\n\t\tamount: PropTypes.number.isRequired,\n\t}),\n\tsetScrew: PropTypes.func.isRequired,\n};\n\nexport default Screw;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\n\nfunction Marking({marking, setMarking}) {\n\tconst [\n\t\tselectedMarking,\n\t\tsetSelectedMarking\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tsetSelectedMarking(\n\t\t\toptions.find(o => o.value === marking)\n\t\t);\n\t}, [marking]);\n\n\tfunction handleMarkingChange(newMarking) {\n\t\tsetMarking(newMarking.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tGravação\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedMarking}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleMarkingChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t{ label: 'Nenhuma', value: null, },\n\t{ label: 'Tipada', value: 'TIPED', },\n\t{ label: 'Caneca elétrica/pneumática', value: 'ELETRIC_PNEUMATIC_PEN', },\n\t{ label: 'Usinagem em baixo relevo', value: 'LOW_RELIEF_MACHINING', },\n\t{ label: 'LASER', value: 'LASER', },\n\t{ label: 'Eletroquímica', value: 'ELECTROCHEMISTRY', },\n];\n\nMarking.propTypes = {\n\tmarking: PropTypes.string,\n\tsetMarking: PropTypes.func.isRequired,\n};\n\nexport default Marking;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Report({report, setReport}) {\n\tconst [\n\t\tselectedReport,\n\t\tsetSelectedReport\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (!report) {\n\t\t\tsetSelectedReport(options[0]);\n\t\t} else {\n\t\t\tsetSelectedReport(report);\n\t\t}\n\t}, [report]);\n\n\tfunction handleReportChange(event) {\n\t\tsetReport(event.target.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tTipo de relatório\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedReport}\n\t\t\t\t\t\tonChange={handleReportChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\tkey={'select-report-' + o}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderReport(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'STANDARD',\n\t'MEASUREMENT_3D',\n];\n\nfunction renderReport(raw) {\n\tif (raw === 'MEASUREMENT_3D') {\n\t\treturn 'Medição Tridimensional';\n\t}\n\n\treturn 'Padrão';\n}\n\nReport.propTypes = {\n\treport: PropTypes.string,\n\tsetReport: PropTypes.func.isRequired,\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Knurled({knurled, setKnurled}) {\n\tconst [\n\t\tselectedKnurled,\n\t\tsetSelectedKnurled\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (knurled === true) {\n\t\t\tsetSelectedKnurled('YES');\n\t\t} else {\n\t\t\tsetSelectedKnurled('NO');\n\t\t}\n\t}, [knurled]);\n\n\tfunction handleKnurledChange(event) {\n\t\tsetKnurled(event.target.value === 'YES');\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tPossui recartilhado?\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedKnurled}\n\t\t\t\t\t\tonChange={handleKnurledChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs={12}\n\t\t\t\t\t\t\t\t\tkey={'select-knurled-' + o}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderKnurled(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'NO',\n\t'YES',\n];\n\nfunction renderKnurled(raw) {\n\tif (raw === 'YES') {\n\t\treturn 'Sim';\n\t}\n\n\treturn 'Não';\n}\n\nKnurled.propTypes = {\n\tknurled: PropTypes.bool,\n\tsetKnurled: PropTypes.func.isRequired,\n};\n\nexport default Knurled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/styles';\nimport Material from './Material';\nimport HeatTreatment from './HeatTreatment';\nimport SuperficialTreatment from './SuperficialTreatment';\nimport Finishing from './Finishing';\nimport Tolerance from './Tolerance';\nimport Screw from './Screw';\nimport Marking from './Marking';\nimport Report from './Report';\nimport Knurled from './Knurled';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemEdit.scss';\n\nfunction QuotationItemEdit({classes, item, open, onCancel}) {\n\tconst [materialType, setMaterialType] = React.useState(item.material_type);\n\tconst [heatTreatment, setHeatTreatment] = React.useState(item.heat_treatment);\n\tconst [superficialTreatment, setSuperficialTreatment] = React.useState(item.superficial_treatment);\n\tconst [tolerance, setTolerance] = React.useState(item.tolerance);\n\tconst [finishing, setFinishing] = React.useState(item.finishing);\n\tconst [screw, setScrew] = React.useState(item.screw);\n\tconst [marking, setMarking] = React.useState(item.marking);\n\tconst [knurled, setKnurled] = React.useState(item.knurled);\n\tconst [report, setReport] = React.useState(item.report);\n\tconst {savePartConfigChanges} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tconst {\n\t\t\tmaterial_type,\n\t\t\theat_treatment,\n\t\t\tsuperficial_treatment,\n\t\t} = item;\n\n\t\tif (materialType.id === material_type.id) {\n\t\t\tsetHeatTreatment(heat_treatment);\n\t\t\tsetSuperficialTreatment(superficial_treatment);\n\t\t} else {\n\t\t\tsetHeatTreatment(null);\n\t\t\tsetSuperficialTreatment(null);\n\t\t}\n\t}, [item, materialType]);\n\n\tfunction handleSaveConfig() {\n\t\tsavePartConfigChanges({\n\t\t\tpart_id: item.id,\n\t\t\tmaterial_type_id: materialType.id,\n\t\t\theat_treatment_id: heatTreatment ? heatTreatment.id : null,\n\t\t\tsuperficial_treatment_id: superficialTreatment ? superficialTreatment.id : null,\n\t\t\ttolerance,\n\t\t\tfinishing,\n\t\t\tscrew,\n\t\t\tmarking,\n\t\t\tknurled,\n\t\t\treport,\n\t\t\tamount: item.amount,\n\t\t});\n\n\t\tonCancel();\n\t}\n\n\tconst fullScreen = useMediaQuery('(max-width:600px)');\n\n\tconst hasChanged = item.material_type.id !== materialType.id ||\n\t\tJSON.stringify(heatTreatment) !== JSON.stringify(item.heat_treatment) ||\n\t\tJSON.stringify(superficialTreatment) !== JSON.stringify(item.superficial_treatment) ||\n\t\ttolerance !== item.tolerance ||\n\t\tfinishing !== item.finishing ||\n\t\tJSON.stringify(screw) !== JSON.stringify(item.screw) ||\n\t\tmarking !== item.marking ||\n\t\treport !== item.report ||\n\t\tknurled !== item.knurled;\n\n\tconst ConfigEditComponents = [\n\t\t<Material\n\t\t\tmaterialType={materialType}\n\t\t\tsetMaterialType={setMaterialType}\n\t\t/>,\n\t\t<HeatTreatment\n\t\t\theatTreatment={heatTreatment}\n\t\t\tsetHeatTreatment={setHeatTreatment}\n\t\t\tmaterialTypeId={materialType.id}\n\t\t/>,\n\t\t<SuperficialTreatment\n\t\t\tsuperficialTreatment={superficialTreatment}\n\t\t\tsetSuperficialTreatment={setSuperficialTreatment}\n\t\t\tmaterialTypeId={materialType.id}\n\t\t/>,\n\t\t<Finishing\n\t\t\tfinishing={finishing}\n\t\t\tsetFinishing={setFinishing}\n\t\t/>,\n\t\t<Tolerance\n\t\t\ttolerance={tolerance}\n\t\t\tsetTolerance={setTolerance}\n\t\t/>,\n\t\t<Screw\n\t\t\tscrew={screw}\n\t\t\tsetScrew={setScrew}\n\t\t/>,\n\t\t<Marking\n\t\t\tmarking={marking}\n\t\t\tsetMarking={setMarking}\n\t\t/>,\n\t\t<Knurled\n\t\t\tknurled={knurled}\n\t\t\tsetKnurled={setKnurled}\n\t\t/>,\n\t\t<Report\n\t\t\treport={report}\n\t\t\tsetReport={setReport}\n\t\t/>,\n\t];\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick={true}\n\t\t\tdisableEscapeKeyDown={true}\n\t\t\tfullWidth\n\t\t\tfullScreen={fullScreen}\n\t\t\tmaxWidth=\"md\"\n\t\t\topen={open}\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableTypography={true}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</Typography>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent className={classes.dialogContent}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tclassName={classes.contentContainer}\n\t\t\t\t>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tclassName={classes.configItem}\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={7}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tclassName={classes.configContainer}\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ConfigEditComponents.map((c, cIndex) => (\n\t\t\t\t\t\t\t\t<React.Fragment key={'edit-component-' + cIndex}>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t{c}\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<Divider light />\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tclassName={classes.auxItem}\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={5}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>{'upload & info'}</p>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={!hasChanged}\n\t\t\t\t\tonClick={handleSaveConfig}\n\t\t\t\t>\n\t\t\t\t\tSalvar\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst height = 'calc(100vh - 14rem)';\n\nconst styles = {\n\tdialogContent: {\n\t\tpadding: 0,\n\t\tminHeight: height,\n\t\tmaxHeight: height,\n\t\toverflowY: 'hidden',\n\t},\n\tcontentContainer: {\n\t\theight,\n\t},\n\tconfigItem: {\n\t\theight: '100%',\n\t\toverflowY: 'auto',\n\t},\n\tconfigContainer: {\n\t\tpadding: '0 1rem',\n\t\twidth: '100%',\n\t\t'& > *': {\n\t\t\tpadding: '0.8rem 0',\n\t\t},\n\t},\n\tauxItem: {\n\t\tbackgroundColor: '#eeeeee80',\n\t\theight: '100%',\n\t},\n};\n\nQuotationItemEdit.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuotationItemEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withStyles } from '@material-ui/core/styles';\nimport QuotationItemEdit from '../QuotationItemEdit';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction HeaderComponent({classes, index, item}) {\n\tconst [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\tconst {\n\t\titemsLoading,\n\t\tremoveItem,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleOpenEdit() {\n\t\tsetEditDialogOpen(true);\n\t}\n\n\tfunction handleCloseEdit() {\n\t\tsetEditDialogOpen(false);\n\t}\n\n\tfunction handleRemoveItem() {\n\t\tif (window.confirm('Remover peça?')) {\n\t\t\tremoveItem(index);\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName={classes.headerContainer}\n\t\t\t>\n\t\t\t\t<Grid item className={classes.itemName}>\n\t\t\t\t\t{item.name}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={handleOpenEdit}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\ttitle=\"Editar peça\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<EditIcon\n\t\t\t\t\t\t\t\t\tclassName={classes.buttonIcon}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\tEditar\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={handleRemoveItem}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\ttitle=\"Remover peça\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DeleteIcon\n\t\t\t\t\t\t\t\t\tclassName={classes.buttonIcon}\n\t\t\t\t\t\t\t\t\tsize=\"smal\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\tRemover\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<QuotationItemEdit\n\t\t\t\titem={item}\n\t\t\t\topen={editDialogOpen}\n\t\t\t\tonCancel={handleCloseEdit}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nconst styles = {\n\theaderContainer: {\n\t\tpadding: '0.5rem 1rem',\n\t},\n\titemName: {\n\t\tfontSize: '1.2rem',\n\t\tfontWeight: 'bold',\n\t},\n\tbuttonIcon: {\n\t\tfontSize: '1.2rem',\n\t\tmarginRight: '0.3rem',\n\t},\n};\n\nHeaderComponent.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HeaderComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles} from '@material-ui/core/styles';\nimport { primary } from '../../themes';\n\nfunction BaseConfigComponent({classes, label, value}) {\n\tlet valueToRender = value;\n\n\tif (!value && value !== 0) {\n\t\tvalueToRender = String.fromCharCode(8213);\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tclassName={classes.container}\n\t\t\tcontainer\n\t\t\tdirection=\"row\"\n\t\t\tjustify=\"flex-start\"\n\t\t\talignItems=\"center\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tclassName={classes.containerLabel}\n\t\t\t>\n\t\t\t\t{`${label}:`}\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t{valueToRender}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tcontainer: {\n\t\tcolor: primary.main,\n\t\tfontSize: '0.85rem',\n\t\t'& > *:first-child': {\n\t\t\tpaddingRight: '0.3rem',\n\t\t},\n\t},\n\tcontainerLabel: {\n\t\tfontWeight: 'bold',\n\t},\n};\n\n\nBaseConfigComponent.propTypes = {\n\tclasses: PropTypes.object,\n\tlabel: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t]),\n};\n\nexport default withStyles(styles)(BaseConfigComponent);\n","export function renderScrew(raw) {\n\tif (!raw) {\n\t\treturn raw;\n\t}\n\n\tconst {type, amount} = raw;\n\n\tif (type === 'EXTERNAL') {\n\t\treturn 'Rosca externa';\n\t}\n\n\treturn `${amount} rosca(s) interna(s)`;\n}\n","export function renderMarking(raw) {\n\tswitch (raw) {\n\t\tcase 'TIPED':\n\t\t\treturn 'Tipada';\n\t\tcase 'ELETRIC_PNEUMATIC_PEN':\n\t\t\treturn 'Caneca elétrica/pneumática';\n\t\tcase 'LOW_RELIEF_MACHINING':\n\t\t\treturn 'Usinagem em baixo relevo';\n\t\tcase 'LASER':\n\t\t\treturn 'LASER';\n\t\tcase 'ELECTROCHEMISTRY':\n\t\t\treturn 'Eletroquímica';\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport BaseConfigComponent from '../BaseConfig';\nimport { renderFinishing } from '../../libs/format/finishing';\nimport { renderTolerance } from '../../libs/format/tolerance';\nimport { renderScrew } from '../../libs/format/screw';\nimport { renderMarking } from '../../libs/format/marking';\nimport { renderReport } from '../../libs/format/report';\n\nfunction ConfigSummary({classes, item}) {\n\tconst {\n\t\tmaterial_type,\n\t\theat_treatment,\n\t\tsuperficial_treatment,\n\t\ttolerance,\n\t\tfinishing,\n\t\tscrew,\n\t\tmarking,\n\t\tknurled,\n\t\treport,\n\t} = item;\n\n\tconst configs = [\n\t\t{ label: 'Material', value: material_type.name },\n\t\t{ label: 'Tratamento térmico', value: heat_treatment ? heat_treatment.name : null },\n\t\t{ label: 'Tratamento superficial', value: superficial_treatment ? superficial_treatment.name : null },\n\t\t{ label: 'Acabamento', value: renderFinishing(finishing) },\n\t\t{ label: 'Menor tolerância', value: renderTolerance(tolerance) },\n\t\t{ label: 'Rosca', value: renderScrew(screw) },\n\t\t{ label: 'Gravação', value: renderMarking(marking) },\n\t\t{ label: 'Recartilhado', value: knurled ? 'Sim' : 'Não', },\n\t\t{ label: 'Tipo de relatório', value: renderReport(report), },\n\t];\n\n\treturn (\n\t\t<Grid\n\t\t\talignItems=\"flex-start\"\n\t\t\tclassName={classes.summaryContainer}\n\t\t\tcontainer\n\t\t\tdirection=\"column\"\n\t\t\tjustify=\"flex-start\"\n\t\t\twrap=\"wrap\"\n\t\t>\n\t\t\t{configs.map(config => (\n\t\t\t\t<Grid\n\t\t\t\t\tkey={'quotation-item-config-summary-' + config.label}\n\t\t\t\t\titem\n\t\t\t\t>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\t{...config}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tsummaryContainer: {\n\t\tpadding: '0.5rem',\n\t\theight: '100%',\n\t\t'& > *': {\n\t\t\tpadding: '0.3rem',\n\t\t},\n\t},\n};\n\nConfigSummary.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ConfigSummary);\n","export function renderReport(raw) {\n\tif (raw === 'MEASUREMENT_3D') {\n\t\treturn 'Medição Tridimensional';\n\t}\n\n\treturn 'Padrão';\n}\n","/**\n * Almost all numbers are going to be multiplied by 100\n * This function corrects it to render to the user\n * @param {number} raw\tNumber multiplied by 100\n * @return {number}\t\tCorrect number to render\n */\nexport function renderNumber(raw) {\n\tconst formatter = new Intl.NumberFormat('pt-BR', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'BRL',\n\t});\n\n\tconst number = (parseInt(raw, 10)/100).toFixed(2);\n\n\treturn formatter.format(number);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { primary } from '../../themes';\nimport { renderNumber } from '../../libs/format/number';\n\nfunction FooterComponent({classes, item}) {\n\tconst {\n\t\tamount,\n\t\tunit_price,\n\t} = item;\n\n\tconst [amountToRender, setAmountToRender] = React.useState(amount);\n\tconst {\n\t\titemsLoading,\n\t\tsavePartConfigChanges,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (newValue === '') {\n\t\t\tnewValue = 0;\n\t\t} else if (isNaN(newValue)) {\n\t\t\tnewValue = amountToRender;\n\t\t} else {\n\t\t\tnewValue = parseInt(newValue, 10);\n\t\t}\n\n\t\tsetAmountToRender(newValue);\n\t}\n\n\tfunction handleCommitAmountChange() {\n\t\tif (amountToRender !== '' && amountToRender !== amount) {\n\t\t\tsavePartConfigChanges({\n\t\t\t\tpart_id: item.id,\n\t\t\t\tmaterial_type_id: item.material_type.id,\n\t\t\t\theat_treatment_id: item.heat_treatment ? item.heat_treatment.id : null,\n\t\t\t\tsuperficial_treatment_id: item.superficial_treatment ? item.superficial_treatment.id : null,\n\t\t\t\ttolerance: item.tolerance,\n\t\t\t\tfinishing: item.finishing,\n\t\t\t\tscrew_amount: item.screw_amount,\n\t\t\t\tamount: amountToRender,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleOnKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\thandleCommitAmountChange();\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tdirection=\"row\"\n\t\t\tjustify=\"space-between\"\n\t\t\talignItems=\"center\"\n\t\t\tclassName={classes.footerContainer}\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName={classes.amountLabel}\n\t\t\t\t>\n\t\t\t\t\tQuantidade\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName={classes.amountInput}\n\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\tonBlur={handleCommitAmountChange}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonKeyPress={handleOnKeyPress}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={\n\t\t\t\t\t\tamountToRender !== 0 ?\n\t\t\t\t\t\tamountToRender\n\t\t\t\t\t\t:\n\t\t\t\t\t\t''\n\t\t\t\t\t}\n\t\t\t\t/>\t\n\t\t\t</Grid>\n\t\t\t{\n\t\t\t\tamount > 1 ?\n\t\t\t\t<Grid\n\t\t\t\t\titem\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\t!itemsLoading && `${renderNumber(unit_price)}/unidade`\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\titemsLoading ?\n\t\t\t\t\t<CircularProgress color=\"primary\" size={20} />\n\t\t\t\t\t:\n\t\t\t\t\t`Subtotal ${renderNumber(unit_price * amount)}`\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tfooterContainer: {\n\t\tcolor: primary.main,\n\t\tpadding: '0.5rem 1rem',\n\t},\n\tamountLabel: {\n\t\tpaddingRight: '0.5rem',\n\t},\n\tamountInput: {\n\t\tborder: `1px solid ${primary.main}80`,\n\t\tborderRadius: '0.5rem',\n\t\tpadding: '0.15rem 0',\n\t\tmaxWidth: '5rem',\n\t\ttextAlign: 'center',\n\t},\n};\n\nFooterComponent.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FooterComponent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport HeaderComponent from './HeaderComponent';\nimport ConfigSummary from './ConfigSummary';\nimport FooterComponent from './FooterComponent';\nimport { primary, borders } from '../../themes';\nimport './QuotationItem.scss';\n\nfunction QuotationItem({classes, index, item}) {\n\treturn (\n\t\t<Grid container className={classes.quotationItem}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<HeaderComponent\n\t\t\t\t\tindex={index}\n\t\t\t\t\titem={item}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider light />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t>\n\t\t\t\t\t<Grid item className={classes.contentGrid}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\talt={item.name}\n\t\t\t\t\t\t\tclassName={classes.itemImg}\n\t\t\t\t\t\t\tsrc=\"https://via.placeholder.com/500?text=IMAGEM+DA+PEÇA\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className={classes.configSummary}>\n\t\t\t\t\t\t<ConfigSummary\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider light />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FooterComponent\n\t\t\t\t\titem={item}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst imageSize = '12rem',\n\tstyles = {\n\t\tquotationItem: {\n\t\t\tbackgroundColor: '#ffffff',\n\t\t\tborder: `1px solid ${borders.primary.main}`,\n\t\t\tborderRadius: '0.5rem',\n\t\t\tcolor: primary.main,\n\t\t},\n\t\tcontentGrid: {\n\t\t\tmaxHeight: imageSize,\n\t\t\tminHeight: imageSize,\n\t\t\tmaxWidth: imageSize,\n\t\t\tminWidth: imageSize,\n\t\t},\n\t\titemImg: {\n\t\t\tmaxHeight: imageSize,\n\t\t\tminHeight: imageSize,\n\t\t\tmaxWidth: imageSize,\n\t\t\tminWidth: imageSize,\n\t\t},\n\t\tconfigSummary: {\n\t\t\tflexGrow: 1,\n\t\t\tmaxHeight: imageSize,\n\t\t\tminHeight: imageSize,\n\t\t},\n\t};\n\nQuotationItem.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(QuotationItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport QuotationItem from '../QuotationItem';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemList.scss';\n\nfunction QuotationItemList({classes}) {\n\tconst {\n\t\titems,\n\t\titemsLoading,\n\t} = React.useContext(QuotationContext);\n\n\tif ((!items || items.length === 0) && !itemsLoading) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"column\"\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<CloudUploadIcon className={classes.uploadIcon} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<span className={classes.emptyMessage}>Faça upload do seu arquivo!</span>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t} else if ((!items || items.length === 0) && itemsLoading) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tclassName={classes.loadingGrid}\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize={80}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t>\n\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tkey={'quotation-item-list__item-' + index}\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12}\n\t\t\t\t\t>\n\t\t\t\t\t\t<QuotationItem\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tuploadIcon: {\n\t\tcolor: 'rgba(36, 47, 64, 0.1)',\n\t\tfontSize: '20rem',\n\t},\n\temptyMessage: {\n\t\tcolor: 'rgba(36, 47, 64, 0.1)',\n\t\tfontSize: '2rem',\n\t},\n\tloadingGrid: {\n\t\theight: '50vh',\n\t},\n\tbasketGrid: {\n\t\tposition: 'sticky',\n\t\tbottom: '-0.35rem',\n\t\tmarginBottom: '0.25rem',\n\t\tmarginLeft: '0.25rem',\n\t\tmarginRight: '0.25rem',\n\t},\n};\n\nQuotationItemList.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(QuotationItemList);\n","import {createContext} from 'react';\n\nexport default createContext();\n","export class FetchError extends Error {\n\tconstructor(message, status) {\n\t\tsuper(message);\n\t\tthis.status = status;\n\t}\n}\n\nexport function processFetchError(err) {\n\tif (err instanceof FetchError) {\n\t\tconsole.error(err.status, err.message);\n\t} else if (err instanceof Error) {\n\t\tconsole.error(err.message);\n\t} else {\n\t\tconsole.error(err);\n\t}\n}\n","import { FetchError } from '../errors';\n\nexport async function handleGraphQLResponse(res, dataKey) {\n\ttry {\n\t\tconst {ok} = res;\n\n\t\tconst {data, errors} = await res.json();\n\n\t\tif (!ok) {\n\t\t\tif (!errors || errors.length === 0) {\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\n\t\t\tconst {extensions} = errors[0]\n\n\t\t\tif (extensions && extensions.message && extensions.status) {\n\t\t\t\tthrow new FetchError(extensions.message, extensions.status);\n\t\t\t} else {\n\t\t\t\tconsole.error('Error message:', errors[0].message);\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdata: data[dataKey],\n\t\t\terror: null,\n\t\t};\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: err.status,\n\t\t\t\tmessage: err.message,\n\t\t\t},\n\t\t};\n\t}\n}\n","import { handleGraphQLResponse } from './handler';\n\nconst materialsQuery = `\nquery RootQuery {\n\tmaterials {\n\t\tid\n\t\tname\n\t\tmaterial_types {\n\t\t\tid\n\t\t\tname\n\t\t\theat_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tsuperficial_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n}\n`.trim();\n\nexport async function getMaterials() {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: materialsQuery,\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'materials');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import { handleGraphQLResponse } from './handler';\n\nconst changePartOptionsQuery = `\nmutation RootMutation($input: PartOptionsInputType!) {\n\tchangePartOptions(input: $input) {\n\t\tid\n\t\tname\n\t\tmaterial_type {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\theat_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\tsuperficial_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\ttolerance\n\t\tfinishing\n\t\tscrew {\n\t\t\ttype\n\t\t\tamount\n\t\t}\n\t\tamount\n\t\tunit_price\n\t}\n}\n`.trim();\n\nconst partBatchInfoQuery = `\nmutation RootMutation($input: PartBatchInfoInputType!) {\n\tpartBatchInfo(input: $input) {\n\t\tsubtotal\n\t\tdelivery {\n\t\t\tprice\n\t\t\tat\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Change Part options\n * @param {object} input\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {number} screw_amount\t\t\t\t\tPart's number of screws\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @return {object}\n *            {object} data\t\t\t\t\t\t\tGraphQL response data. It can be null\n *                {string} id\t\t\t\t\t\tPart's id (uuid)\n *                {string} name\t\t\t\t\t\tPart's name\n *                {object} material_type\t\t\tPart's material type\n *                    {string} name\t\t\t\t\tMaterial type's name\n *                    {string} id\t\t\t\t\tMaterial type's id\n *                {object} heat_treatment\t\t\tPart's heat treatment. It can be null\n *                    {string} name\t\t\t\t\tHeat Treatment's name\n *                    {string} id\t\t\t\t\tHeat treatment's id\n *                {object} superficial_treatment\tPart's superficial treatment. It can be null\n *                    {string} name\t\t\t\t\tSuperficial Treatment's name\n *                    {string} id\t\t\t\t\tSuperficial treatment's id\n *                {string} tolerance\t\t\t\tPart's tolerance. It can be null.\n *                {string} finishing\t\t\t\tPart's finishing. It can be null\n *                {number} screw_amount\t\t\t\tPart's number of screws\n *                {number} unit_price\t\t\t\tPart's unit price. It's multiplied by 100 (int)\n *            {object} error\t\t\t\t\t\tError object. It can be null\n *                {number} status\t\t\t\t\tHTTP status code\n *                {string} message\n */\nexport async function changePartConfig(input)  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: changePartOptionsQuery,\n\t\t\t\tvariables: { input },\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'changePartOptions');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n\n/**\n * Get batch info\n * @param {object[]} parts\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {object} screw\t\t\t\t\t\tPart's screw config\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @param {string} delivery\t\t\t\t\t\t\tDelivery option\n * @return {object}\n *             {number} subtotal\t\t\t\t\tBatch subtotal\n *             {object} delivery\t\t\t\t\tDelivery info\n *                 {number} price\t\t\t\t\tDelivery price\n *                 {string} at\t\t\t\t\t\tEstimated delivery date\n */\nexport async function partBatchInfo(parts, delivery = 'WORKINGDAYS_15')  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: partBatchInfoQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tdelivery,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'partBatchInfo');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport QuotationUpload from '../../components/QuotationUpload';\nimport QuotationItemList from '../../components/QuotationItemList';\nimport AppContext from '../../contexts/AppContext';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { getMaterials } from '../../libs/fetch/material';\nimport { changePartConfig } from '../../libs/fetch/part';\nimport './Quotation.scss';\n\nfunction Quotation() {\n\tconst [items, setItems] = React.useState(mockItems);\n\tconst [itemsLoading, setItemsLoading] = React.useState(false);\n\tconst [materials, setMaterials] = React.useState([]);\n\tconst {handleOpenSnackbar} = React.useContext(AppContext);\n\n\tReact.useEffect(() => {\n\t\tgetMaterials().then(({data, error}) => {\n\t\t\tif (!error) {\n\t\t\t\tsetMaterials(data);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tfunction savePartConfigChanges(input) {\n\t\tsetItemsLoading(true);\n\n\t\tchangePartConfig(input)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (data) {\n\t\t\t\t\tconst newItems = items.map(item => {\n\t\t\t\t\t\tif (item.id === input.part_id) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t});\n\n\t\t\t\t\tsetItems(newItems);\n\n\t\t\t\t\thandleOpenSnackbar('Atualização com sucesso');\n\t\t\t\t} else if (error) {\n\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetItemsLoading(false);\n\t\t\t});\n\t}\n\n\tfunction addItem(item) {\n\t\tsetItems([...items, item]);\n\t}\n\n\tfunction removeItem(index) {\n\t\tconst newItems = items.filter((_, i) => i !== index);\n\n\t\tsetItems(newItems);\n\t}\n\n\treturn (\n\t\t<QuotationContext.Provider value={{\n\t\t\titems,\n\t\t\titemsLoading,\n\t\t\tsetItemsLoading,\n\t\t\tsavePartConfigChanges,\n\t\t\taddItem,\n\t\t\tremoveItem,\n\t\t\tmaterials,\n\t\t}}>\n\t\t\t<Container className=\"quotation-view__container\" maxWidth=\"lg\">\n\t\t\t\t<QuotationItemList />\n\t\t\t\t<QuotationUpload />\n\t\t\t</Container>\n\t\t</QuotationContext.Provider>\n\t);\n}\n\nconst mockItems = Array(0).fill(JSON.parse('{\"id\":\"956068e4-5a44-4ffd-a0b0-53ed1f3bcd96\",\"name\":\"test.stp\",\"material_type\":{\"id\":\"812b20bd-1980-4b01-b973-1e27cc75e478\",\"name\":\"Alumínio Fundido SAE 323 T6\"},\"heat_treatment\":null,\"superficial_treatment\":null,\"tolerance\":null,\"finishing\":null,\"screw\":null,\"marking\":null,\"knurled\":null,\"report\":null,\"amount\":1,\"unit_price\":27590}'));\n\nexport default Quotation;\n","import { handleGraphQLResponse } from './handler';\n\nconst loginQuery = `\nmutation RootMutation($input: LoginInputType!) {\n\tlogin (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\nconst registerUserQuery = `\nmutation RootMutation($input: RegisterUserInputType!) {\n\tregisterUser (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Log in function\n * @param {string} email\tUser email\n * @param {string} password\tUser password\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function login(email, password) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: loginQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: { email, password, },\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'login');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n\n/**\n * Register user function\n * @param {string} name\t\t\t\t\t\tUser name\n * @param {string} phone_number\t\t\t\tUser phone_numbe\n * @param {string} email\t\t\t\t\tUser email\n * @param {string} password\t\t\t\t\tUser password\n * @param {object[]} addresses\t\t\t\tUser addresses\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function registerUser(name, phone_number, email, password, addresses) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: registerUserQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tphone_number,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t\taddresses\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'registerUser');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n","function hasLocalStorage() {\n\treturn 'localStorage' in window;\n}\n\nfunction getUserJwt() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userJwt');\n}\n\nfunction getUserName() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userName');\n}\n\nfunction getUserEmail() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userEmail');\n}\n\nexport function getUserCredentials() {\n\treturn {\n\t\tname: getUserName(),\n\t\temail: getUserEmail(),\n\t\ttoken: getUserJwt(),\n\t};\n}\n\nfunction setUserName(name) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userName', name);\n}\n\nfunction setUserJwt(jwt) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userJwt', jwt);\n}\n\nfunction setUserEmail(email) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userEmail', email);\n}\n\nexport function setUserCredentials(name, email, jwt) {\n\tsetUserName(name);\n\tsetUserEmail(email);\n\tsetUserJwt(jwt);\n}\n","import idb from './';\n\nexport function saveUserAddresses(userEmail, addresses) {\n\treturn idb()\n\t\t.then(db => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst store = db.transaction('userAddress', 'readwrite')\n\t\t\t\t\t.objectStore('userAddress');\n\n\t\t\t\taddresses.forEach(ad => {\n\t\t\t\t\tconst putRequest = store.put({userEmail, ...ad});\n\n\t\t\t\t\tputRequest.onerror = function (event) {\n\t\t\t\t\t\tconsole.error(putRequest.error);\n\t\t\t\t\t\treject(putRequest.error);\n\t\t\t\t\t};\n\n\t\t\t\t\tputRequest.onsuccess = function (event) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\treturn Promise.resolve();\n\t\t});\n}\n","export default function idb(DBName = 'mech4u', DBVersion = 1) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!('indexedDB' in window)) {\n\t\t\tconsole.error('Browser doesn\\'t support indexedDB');\n\t\t\treject(new Error('Browser doesn\\'t support indexedDB'));\n\t\t}\n\n\t\tconst request = window.indexedDB.open(DBName, DBVersion);\n\n\t\trequest.onerror = function (event) {\n\t\t\tconsole.error('Error opening indexedDB', request.error);\n\t\t\treject(request.error);\n\t\t};\n\n\t\trequest.onsuccess = function (event) {\n\t\t\tresolve(event.target.result);\n\t\t};\n\n\t\trequest.onupgradeneeded = function (event) {\n\t\t\tconst db = event.target.result;\n\n\t\t\tconst userStore = db.createObjectStore('userAddress', { keyPath: 'id' });\n\n\t\t\tuserStore.createIndex('userEmail', 'userEmail', { unique: false });\n\t\t\tuserStore.createIndex('id', 'id', { unique: true });\n\t\t};\n\t});\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AppBar from './components/AppBar';\nimport QuotationView from './views/Quotation';\nimport AppContext from './contexts/AppContext';\nimport { login, registerUser } from './libs/fetch/user';\nimport { setUserCredentials } from './libs/localStorage';\nimport { saveUserAddresses } from './libs/indexedDB/userDB';\nimport './App.scss';\n\nfunction App() {\n\tconst [user, setUser] = React.useState(null);\n\tconst [userLoading, setUserLoading] = React.useState(false);\n\tconst [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\tconst [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n\tReact.useEffect(() => {\n\t\tsetUser(JSON.parse(`{\"data\":{\"login\":{\"name\":\"Davi Souza\",\"email\":\"ddas.souza@gmail.com\",\"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQzMGU1YjdlLTE4ZmEtNDU3Ny1iYjFjLTJmYmIyNDIxYjgxMCIsIm5hbWUiOiJEYXZpIFNvdXphIiwiZW1haWwiOiJkZGFzLnNvdXphQGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IjEyOTgxNzY0NTkzIiwiY3JlYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwidXBkYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwiZGVsZXRlZEF0IjpudWxsLCJhZGRyZXNzZXMiOlt7ImlkIjoiOGRjMWY3MWQtODlhMS00ZTg0LTgwYWUtMTI2MzVjNjJmOTdkIiwic3RhdGUiOiJTUCIsIm11bmljaXBhbGl0eSI6IlPDo28gSm9zw6kgZG9zIENhbXBvcyIsImFkZHJlc3MiOiJSdWEgUmVwdWJsaWNhIGRvIElyYXF1ZSIsImFkZHJlc3NfbnVtYmVyIjo4MCwiY29tcGxlbWVudCI6IkFwdCA2NEIiLCJwb3N0Y29kZSI6IjEyMjE2LTU0MCJ9XSwiaWF0IjoxNTY5ODM2Njc3LCJleHAiOjE1NzI0Mjg2Nzd9.hqDc7kh_jF10pRceaHUt2_2a9gKI68lP1AsTMvPDN70\",\"addresses\":[{\"id\":\"8dc1f71d-89a1-4e84-80ae-12635c62f97d\",\"state\":\"SP\",\"municipality\":\"São José dos Campos\",\"address\":\"Rua Republica do Iraque\",\"address_number\":80,\"complement\":\"Apt 64B\",\"postcode\":\"12216-540\"}]}}}`));\n\t}, []);\n\n\tfunction userLogin(email, password) {\n\t\tsetUserLoading(true);\n\n\t\tlogin(email, password)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => {\n\t\t\t\tsetUserLoading(false);\n\t\t\t});\n\t}\n\n\tfunction userRegister(name, phoneNumber, email, password, addresses) {\n\t\tregisterUser(name, phoneNumber, email, password, addresses)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error);;\n\t}\n\n\tfunction handleOpenSnackbar(message) {\n\t\tsetSnackbarMessage(message);\n\t\tsetSnackbarOpen(true);\n\t}\n\n\tfunction handleCloseSnackbar() {\n\t\tsetSnackbarOpen(false);\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={{\n\t\t\tuser,\n\t\t\tuserLoading,\n\t\t\tuserLogin,\n\t\t\tuserRegister,\n\t\t\thandleOpenSnackbar,\n\t\t}}>\n\t\t\t<AppBar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/quotation\" component={QuotationView} />\n\t\t\t\t<Route render={() => <Redirect to=\"/quotation\" />} />\n\t\t\t</Switch>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'left',\n\t\t\t\t}}\n\t\t\t\topen={snackbarOpen}\n\t\t\t\tautoHideDuration={5000}\n\t\t\t\tonClose={handleCloseSnackbar}\n\t\t\t\tmessage={<span id=\"message-id\">{snackbarMessage}</span>}\n\t\t\t\taction={\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tonClick={handleCloseSnackbar}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t/>\n\t\t</AppContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { primary, secondary } from './themes';\nimport './index.scss';\nimport 'typeface-roboto';\n\nconst platformTheme = createMuiTheme({\n\tpalette: {\n\t\tprimary,\n\t\tsecondary,\n\t},\n});\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ThemeProvider theme={platformTheme}>\n\t\t\t<CssBaseline />\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}