{"version":3,"sources":["components/AppBar/AppBar.js","contexts/QuotationContext.js","libs/fetch/upload.js","components/QuotationUpload/QuotationUpload.js","components/QuotationItemEdit/Material.js","components/QuotationItemEdit/HeatTreatment.js","components/QuotationItemEdit/SuperficialTreatment.js","libs/format/finishing.js","components/QuotationItemEdit/Finishing.js","components/QuotationItemEdit/Tolerance.js","components/QuotationItemEdit/Screw.js","components/QuotationItemEdit/Engraving.js","components/QuotationItemEdit/Report.js","components/QuotationItemEdit/Knurled.js","components/QuotationItemEdit/QuotationItemEdit.js","components/QuotationItem/HeaderComponent.js","components/BaseConfig/BaseConfig.js","libs/format/number.js","components/QuotationItem/FooterComponent.js","libs/format/screw.js","components/QuotationItem/QuotationItem.js","contexts/AppContext.js","components/UserLogin/UserLogin.js","components/QuotationOrder/OrderStepper.js","components/QuotationOrder/ItemSummary.js","components/QuotationOrder/ItemsList.js","contexts/QuotationOrderContext.js","components/QuotationOrder/Delivery.js","libs/format/delivery.js","components/QuotationOrder/Confirmation.js","components/QuotationOrder/OrderStepContent.js","components/QuotationOrder/OrderStepperButtons.js","libs/errors/index.js","libs/fetch/handler.js","libs/fetch/part.js","components/QuotationOrder/QuotationOrder.js","components/QuotationBasket/QuotationBasket.js","components/QuotationItemList/QuotationItemList.js","libs/fetch/material.js","views/Quotation/Quotation.js","libs/fetch/user.js","libs/localStorage/index.js","libs/indexedDB/userDB.js","libs/indexedDB/index.js","App.js","serviceWorker.js","index.js"],"names":["style","appBar","backgroundColor","color","marginBottom","AppBarComponent","AppBar","elevation","position","Toolbar","Typography","variant","createContext","uploadFile","file","a","formData","FormData","append","fetch","method","body","response","ok","data","error","status","message","json","console","withStyles","uploadButton","fontSize","height","classes","inputEl","React","useRef","useContext","QuotationContext","itemsLoading","setItemsLoading","addItem","event","target","files","part","Box","component","id","type","name","ref","onChange","Button","className","disabled","fullWidth","onClick","current","click","Materials","materialType","setMaterialType","useState","selectedMaterialType","setSelectedMaterialType","options","setOptions","materials","useEffect","label","value","map","m","material_types","mt","flat","Grid","container","spacing","item","xs","newMaterialType","materialTypeId","findMaterialType","HeatTreatment","props","heatTreatments","setHeatTreatments","selectedHeatTreatment","setSelectedHeatTreatment","heatTreatment","setHeatTreatment","material","heat_treatments","materialHeatTreatments","concat","ht","newHeatTreatment","find","SuperficialTreatment","superficialTreatments","setSuperficialTreatments","selectedSuperficialTreatment","setSelectedSuperficialTreatment","superficialTreatment","setSuperficialTreatment","superficial_treatments","materialSuperficialTreatments","newSuperficialTreatment","renderFinishing","raw","Finishing","finishing","setFinishing","selectedFinishing","setSelectedFinishing","FormControl","RadioGroup","o","sm","key","FormControlLabel","control","Radio","Tolerance","tolerance","setTolerance","alignItems","TextField","InputProps","startAdornment","InputAdornment","endAdornment","newValue","test","renderScrewType","Screw","screw","setScrew","selectedScrew","setSelectedScrew","newScrewType","amount","helperText","oldValue","isNaN","parseInt","toString","Engraving","engraving","setEngraving","selectedEngraving","setSelectedEngraving","newEngraving","renderReport","Report","report","setReport","selectedReport","setSelectedReport","renderKnurled","Knurled","knurled","setKnurled","selectedKnurled","setSelectedKnurled","dialogContent","padding","minHeight","maxHeight","panels","paddingTop","paddingLeft","paddingRight","open","onCancel","material_type","heat_treatment","superficial_treatment","savePartConfigChanges","fullScreen","useMediaQuery","hasChanged","JSON","stringify","ConfigEditComponents","Material","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","scroll","DialogTitle","disableTypography","DialogContent","c","cIndex","Fragment","Divider","light","DialogActions","part_id","material_type_id","heat_treatment_id","superficial_treatment_id","parseFloat","HeaderComponent","index","editDialogOpen","setEditDialogOpen","removeItem","direction","justify","IconButton","title","window","confirm","containerLabel","fontWeight","valueToRender","renderNumber","toFixed","FooterComponent","unit_price","amountToRender","setAmountToRender","handleCommitAmountChange","screw_amount","onBlur","onKeyPress","CircularProgress","size","renderScrew","QuotationItem","md","BaseConfig","UserLogin","email","password","form","setForm","isEmailValid","setIsEmailValid","AppContext","userLoading","userLogin","handleOpenSnackbar","handleFormChange","noValidate","autoComplete","onSubmit","preventDefault","margin","required","steps","OrderStepper","activeStep","Stepper","Step","StepLabel","RenderConfig","ItemSummary","ItemsList","items","deliveryOptions","Delivery","QuotationOrderContext","deliveryOption","setDeliveryOption","orderInfo","orderLoading","option","newOption","days","split","renderDeliveryOption","delivery","at","Date","toLocaleDateString","deliveryDate","Confirmation","subtotal","price","stepContents","OrderStepContent","length","OrderStepperButtons","isLoggedIn","setActiveStep","maxStep","alert","FetchError","Error","handleGraphQLResponse","res","dataKey","errors","extensions","changePartOptionsQuery","trim","partBatchInfoQuery","input","credentials","headers","query","variables","parts","processPart","setOrderInfo","setOrderLoading","user","partBatchInfo","then","finally","Provider","QuotationBasket","setSubtotal","quotationOrderOpen","setQuotationOrderOpen","reduce","sum","uploadIcon","loadingGrid","basketGrid","bottom","marginLeft","marginRight","materialsQuery","mockItems","Array","fill","parse","Quotation","setItems","setMaterials","getMaterials","changePartConfig","newItems","filter","_","i","Container","loginQuery","registerUserQuery","warn","phone_number","addresses","hasLocalStorage","setUserCredentials","jwt","localStorage","setItem","setUserName","setUserEmail","setUserJwt","saveUserAddresses","userEmail","DBName","DBVersion","Promise","resolve","reject","request","indexedDB","onerror","onsuccess","result","onupgradeneeded","userStore","createObjectStore","keyPath","createIndex","unique","idb","db","store","transaction","objectStore","forEach","ad","putRequest","put","catch","err","App","setUser","setUserLoading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleCloseSnackbar","login","userRegister","phoneNumber","registerUser","path","QuotationView","render","to","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","Boolean","location","hostname","match","platformTheme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","ReactDOM","ThemeProvider","theme","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b50df21b.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst style = {\n\tappBar: {\n\t\tbackgroundColor: 'transparent',\n\t\tcolor: 'rgba(69, 90, 100, 0.8)',\n\t\tmarginBottom: '1rem',\n\t},\n};\n\nfunction AppBarComponent() {\n\treturn (\n\t\t<AppBar elevation={0} position=\"static\" style={style.appBar}>\n\t\t\t<Toolbar>\n\t\t\t\t<Typography variant=\"h6\">Mech4u</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nexport default AppBarComponent;\n","import {createContext} from 'react';\n\nexport default createContext();\n","export async function uploadFile(file) {\n\tconst formData = new FormData();\n\n\tformData.append('file', file);\n\n\ttry {\n\t\tconst response = await fetch('/api/file/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\treturn {\n\t\t\t\tdata: null,\n\t\t\t\terror: {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tmessage: 'Não foi possível fazer upload do arquivo',\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\treturn {\n\t\t\tdata,\n\t\t\terror: null,\n\t\t};\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Não foi possível fazer upload do arquivo',\n\t\t\t}\n\t\t};\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { uploadFile } from '../../libs/fetch/upload';\nimport './QuotationUpload.scss';\n\n\nfunction QuotationUpload({classes}) {\n\tconst inputEl = React.useRef(null);\n\tconst {\n\t\titemsLoading,\n\t\tsetItemsLoading,\n\t\taddItem,\n\t} = React.useContext(QuotationContext);\n\n\tasync function handleChange(event) {\n\t\tsetItemsLoading(true);\n\n\t\ttry {\n\t\t\tconst {data} = await uploadFile(event.target.files[0]);\n\n\t\t\taddItem({\n\t\t\t\t...data.part,\n\t\t\t});\n\t\t} catch (err) {\n\t\t} finally {\n\t\t\tsetItemsLoading(false);\n\t\t}\n\t}\n\n\tfunction openFileInput() {\n\t\tinputEl.current.click();\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tcomponent=\"div\"\n\t\t\tid=\"quotation-upload-wrapper\"\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"file\"\n\t\t\t\tname=\"file\"\n\t\t\t\tid=\"quotation-upload-input\"\n\t\t\t\tref={inputEl}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclassName={classes.uploadButton}\n\t\t\t\tdisabled={itemsLoading}\n\t\t\t\tfullWidth\n\t\t\t\tonClick={openFileInput}\n\t\t\t\tvariant=\"text\"\n\t\t\t>\n\t\t\t\tAdicionar Arquivo\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n\nconst styles = {\n\tuploadButton: {\n\t\tfontSize: '1.25rem',\n\t\theight: '5rem',\n\t},\n};\n\nQuotationUpload.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(QuotationUpload);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction Materials({materialType, setMaterialType}) {\n\tconst [\n\t\tselectedMaterialType,\n\t\tsetSelectedMaterialType\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tconst {id, name} = materialType;\n\t\tsetSelectedMaterialType({\n\t\t\tlabel: name,\n\t\t\tvalue: id,\n\t\t});\n\t}, [materialType]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\tmaterials.map(m => m.material_types.map(mt => ({\n\t\t\t\tlabel: mt.name,\n\t\t\t\tvalue: mt.id,\n\t\t\t}))).flat(1)\n\t\t);\n\t}, [materials]);\n\n\tfunction handleMaterialTypeChange(newMaterialType) {\n\t\tsetMaterialType(findMaterialType(materials, newMaterialType.value));\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tMaterial\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedMaterialType}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleMaterialTypeChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction findMaterialType(materials, materialTypeId) {\n\tfor (const m of materials) {\n\t\tfor (const mt of m.material_types) {\n\t\t\tif (mt.id === materialTypeId) {\n\t\t\t\treturn {...mt};\n\t\t\t}\n\t\t}\n\t}\n}\n\nMaterials.propTypes = {\n\tmaterialType: PropTypes.object.isRequired,\n\tsetMaterialType: PropTypes.func.isRequired,\n};\n\nexport default Materials;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction HeatTreatment(props) {\n\tconst [heatTreatments, setHeatTreatments] = React.useState([]);\n\tconst [\n\t\tselectedHeatTreatment,\n\t\tsetSelectedHeatTreatment\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\tconst {\n\t\tmaterialTypeId,\n\t\theatTreatment,\n\t\tsetHeatTreatment,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetHeatTreatments(materialHeatTreatments(materials, materialTypeId));\n\t}, [materialTypeId, materials]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\t[{label:'Nenhum', value: null}].concat(\n\t\t\t\theatTreatments.map(ht => ({\n\t\t\t\t\tlabel: ht.name,\n\t\t\t\t\tvalue: ht.id,\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t}, [heatTreatments]);\n\n\tReact.useEffect(() => {\n\t\tif (!heatTreatment) {\n\t\t\tsetSelectedHeatTreatment({\n\t\t\t\tlabel: 'Nenhum',\n\t\t\t\tvalue: null,\n\t\t\t});\n\t\t} else {\n\t\t\tsetSelectedHeatTreatment({\n\t\t\t\tlabel: heatTreatment.name,\n\t\t\t\tvalue: heatTreatment.id,\n\t\t\t});\n\t\t}\n\t}, [heatTreatment]);\n\t\n\tfunction handleHeatTreatmentChange(newHeatTreatment) {\n\t\tif (newHeatTreatment.value === null) {\n\t\t\tsetHeatTreatment(null);\n\t\t} else {\n\t\t\tsetHeatTreatment(\n\t\t\t\theatTreatments.find(ht => ht.id === newHeatTreatment.value)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tTratamento Térmico\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedHeatTreatment}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleHeatTreatmentChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction materialHeatTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.heat_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nHeatTreatment.propTypes = {\n\tmaterialTypeId: PropTypes.string.isRequired,\n\theatTreatment: PropTypes.object,\n\tsetHeatTreatment: PropTypes.func.isRequired,\n};\n\nexport default HeatTreatment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction SuperficialTreatment(props) {\n\tconst [superficialTreatments, setSuperficialTreatments] = React.useState([]);\n\tconst [\n\t\tselectedSuperficialTreatment,\n\t\tsetSelectedSuperficialTreatment\n\t] = React.useState(null);\n\tconst [options, setOptions] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\tconst {\n\t\tmaterialTypeId,\n\t\tsuperficialTreatment,\n\t\tsetSuperficialTreatment,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetSuperficialTreatments(materialSuperficialTreatments(materials, materialTypeId));\n\t}, [materialTypeId, materials]);\n\n\tReact.useEffect(() => {\n\t\tsetOptions(\n\t\t\t[{label:'Nenhum', value: null}].concat(\n\t\t\t\tsuperficialTreatments.map(ht => ({\n\t\t\t\t\tlabel: ht.name,\n\t\t\t\t\tvalue: ht.id,\n\t\t\t\t}))\n\t\t\t)\n\t\t);\n\t}, [superficialTreatments]);\n\n\tReact.useEffect(() => {\n\t\tif (!superficialTreatment) {\n\t\t\tsetSelectedSuperficialTreatment({\n\t\t\t\tlabel: 'Nenhum',\n\t\t\t\tvalue: null,\n\t\t\t});\n\t\t} else {\n\t\t\tsetSelectedSuperficialTreatment({\n\t\t\t\tlabel: superficialTreatment.name,\n\t\t\t\tvalue: superficialTreatment.id,\n\t\t\t});\n\t\t}\n\t}, [superficialTreatment]);\n\t\n\tfunction handleSuperficialTreatmentChange(newSuperficialTreatment) {\n\t\tif (newSuperficialTreatment.value === null) {\n\t\t\tsetSuperficialTreatment(null);\n\t\t} else {\n\t\t\tsetSuperficialTreatment(\n\t\t\t\tsuperficialTreatments.find(ht => ht.id === newSuperficialTreatment.value)\n\t\t\t);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tTratamento Superficial\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedSuperficialTreatment}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleSuperficialTreatmentChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction materialSuperficialTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.superficial_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nSuperficialTreatment.propTypes = {\n\tmaterialTypeId: PropTypes.string.isRequired,\n\tsuperficialTreatment: PropTypes.object,\n\tsetSuperficialTreatment: PropTypes.func.isRequired,\n};\n\nexport default SuperficialTreatment;\n","/**\n * The \"Finishing\" config of the part comes as a ENUM\n * It is necessary to translate/format it so the user\n * can read the value\n *\n * Possible values for finishing:\n * - STANDARD -> Padrão - 3.2 Ra\n * - RECTIFIED -> Retificado - 1.6 Ra\n * - POLISHED -> Polido - 0.8 Ra\n * @param {string} raw\tFinishing enum\n * @return {string}\t\tFinishing translated/formatted\n */\nexport function renderFinishing(raw) {\n\tswitch (raw) {\n\t\tcase 'RECTIFIED':\n\t\t\treturn 'Retificado - 1.6 Ra';\n\t\tcase 'POLISHED':\n\t\t\treturn 'Polido - 0.8 Ra';\n\t\tdefault:\n\t\t\treturn 'Padrão - 3.2 Ra';\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport { renderFinishing } from '../../libs/format/finishing';\n\nfunction Finishing({finishing, setFinishing}) {\n\tconst [\n\t\tselectedFinishing,\n\t\tsetSelectedFinishing\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (finishing === null) {\n\t\t\tsetSelectedFinishing(options[0]);\n\t\t} else {\n\t\t\tsetSelectedFinishing(finishing);\n\t\t}\n\t}, [finishing]);\n\n\tfunction handleFinishingChange(event) {\n\t\tsetFinishing(event.target.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tAcabamento\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedFinishing}\n\t\t\t\t\t\tonChange={handleFinishingChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={'select-finishing-' + o}>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderFinishing(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'STANDARD',\n\t'RECTIFIED',\n\t'POLISHED',\n];\n\nFinishing.propTypes = {\n\tfinishing: PropTypes.string,\n\tsetFinishing: PropTypes.func.isRequired,\n};\n\nexport default Finishing;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nfunction Tolerance({tolerance, setTolerance}) {\n\tfunction handleToleranceChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (/^\\d*$/.test(newValue)) {\n\t\t\tsetTolerance(newValue);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tMenor Tolerância\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} className=\"quotation-item-edit__tolerance-finishing-grid\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: <InputAdornment position=\"start\">0.</InputAdornment>,\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">mm</InputAdornment>\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleToleranceChange}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={tolerance !== null ? tolerance : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nTolerance.propTypes = {\n\ttolerance: PropTypes.string,\n\tsetTolerance: PropTypes.func.isRequired,\n};\n\nexport default Tolerance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Screw({screw, setScrew}) {\n\tconst [\n\t\tselectedScrew,\n\t\tsetSelectedScrew,\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (screw === null) {\n\t\t\tsetSelectedScrew(options[0]);\n\t\t} else {\n\t\t\tsetSelectedScrew(\n\t\t\t\toptions.find(o => o === screw.type)\n\t\t\t);\n\t\t}\n\t}, [screw]);\n\n\tfunction handleScrewTypeChange(event) {\n\t\tconst newScrewType = event.target.value;\n\n\t\tif (newScrewType === 'NONE') {\n\t\t\tsetScrew(null);\n\t\t} else {\n\t\t\tsetScrew({\n\t\t\t\ttype: newScrewType,\n\t\t\t\tamount: (screw && newScrewType === 'INTERNAL') ? screw.amount : 0,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleScrewAmountChange(event) {\n\t\tconst oldValue = screw ? screw.amount : 0;\n\t\tlet newValue = event.target.value;\n\n\t\tif (newValue === '') {\n\t\t\tnewValue = 0;\n\t\t} else if (isNaN(newValue)) {\n\t\t\tnewValue = oldValue;\n\t\t} else {\n\t\t\tnewValue = parseInt(newValue, 10);\n\t\t}\n\n\t\tsetScrew({\n\t\t\ttype: screw.type,\n\t\t\tamount: newValue,\n\t\t});\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tRoscas\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\tvalue={selectedScrew}\n\t\t\t\t\t\t\t\tonChange={handleScrewTypeChange}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={'select-screw-type-' + o}>\n\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={renderScrewType(o)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tdisabled={screw === null || screw.type === 'EXTERNAL'}\n\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t(screw && screw.type === 'INTERNAL') ?\n\t\t\t\t\t\t\t\t(screw.amount === 0)\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thelperText = {\n\t\t\t\t\t\t\t\t(screw && screw.type === 'INTERNAL' && screw.amount === 0) ?\n\t\t\t\t\t\t\t\t'Número deve ser maior ou igual a 1'\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={handleScrewAmountChange}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\t(screw && screw.amount !== 0) ?\n\t\t\t\t\t\t\t\tscrew.amount.toString()\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\t\t\t\t\t\t\t\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction renderScrewType(raw) {\n\tif (raw === 'INTERNAL') {\n\t\treturn 'Interna';\n\t} else if (raw === 'EXTERNAL') {\n\t\treturn 'Externa';\n\t}\n\n\treturn 'Nenhuma';\n}\n\nconst options = [\n\t'NONE',\n\t'EXTERNAL',\n\t'INTERNAL',\n];\n\nScrew.propTypes = {\n\tscrew: PropTypes.exact({\n\t\ttype: PropTypes.oneOf(['EXTERNAL', 'INTERNAL']).isRequired,\n\t\tamount: PropTypes.number.isRequired,\n\t}),\n\tsetScrew: PropTypes.func.isRequired,\n};\n\nexport default Screw;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Select from 'react-select';\n\nfunction Engraving({engraving, setEngraving}) {\n\tconst [\n\t\tselectedEngraving,\n\t\tsetSelectedEngraving\n\t] = React.useState(null);\n\n\tReact.useEffect(() => {\n\t\tsetSelectedEngraving(\n\t\t\toptions.find(o => o.value === engraving)\n\t\t);\n\t}, [engraving]);\n\n\tfunction handleEngravingChange(newEngraving) {\n\t\tsetEngraving(newEngraving.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tGravação\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedEngraving}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tonChange={handleEngravingChange}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t{ label: 'Nenhuma', value: null, },\n\t{ label: 'Tipada', value: 'TIPED', },\n\t{ label: 'Caneca elétrica/pneumática', value: 'ELETRIC_PNEUMATIC_PEN', },\n\t{ label: 'Usinagem em baixo relevo', value: 'LOW_RELIEF_MACHINING', },\n\t{ label: 'LASER', value: 'LASER', },\n\t{ label: 'Eletroquímica', value: 'ELECTROCHEMISTRY', },\n];\n\nEngraving.propTypes = {\n\tengraving: PropTypes.string,\n\tsetEngraving: PropTypes.func.isRequired,\n};\n\nexport default Engraving;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Report({report, setReport}) {\n\tconst [\n\t\tselectedReport,\n\t\tsetSelectedReport\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (!report) {\n\t\t\tsetSelectedReport(options[0]);\n\t\t} else {\n\t\t\tsetSelectedReport(report);\n\t\t}\n\t}, [report]);\n\n\tfunction handleReportChange(event) {\n\t\tsetReport(event.target.value);\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tTipo de relatório\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedReport}\n\t\t\t\t\t\tonChange={handleReportChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={'select-report-' + o}>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderReport(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'STANDARD',\n\t'MEASUREMENT_3D',\n];\n\nfunction renderReport(raw) {\n\tif (raw === 'MEASUREMENT_3D') {\n\t\treturn 'Medição Tridimensional';\n\t}\n\n\treturn 'Padrão';\n}\n\nReport.propTypes = {\n\treport: PropTypes.string,\n\tsetReport: PropTypes.func.isRequired,\n};\n\nexport default Report;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Typography from '@material-ui/core/Typography';\n\nfunction Knurled({knurled, setKnurled}) {\n\tconst [\n\t\tselectedKnurled,\n\t\tsetSelectedKnurled\n\t] = React.useState(options[0]);\n\n\tReact.useEffect(() => {\n\t\tif (knurled === true) {\n\t\t\tsetSelectedKnurled('YES');\n\t\t} else {\n\t\t\tsetSelectedKnurled('NO');\n\t\t}\n\t}, [knurled]);\n\n\tfunction handleKnurledChange(event) {\n\t\tsetKnurled(event.target.value === 'YES');\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tPossui recartilhado?\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<FormControl component=\"fieldset\" fullWidth>\n\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\tvalue={selectedKnurled}\n\t\t\t\t\t\tonChange={handleKnurledChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t{options.map(o => (\n\t\t\t\t\t\t\t\t<Grid item xs={12} sm={4} key={'select-knurled-' + o}>\n\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\tvalue={o}\n\t\t\t\t\t\t\t\t\t\tcontrol={<Radio/>}\n\t\t\t\t\t\t\t\t\t\tlabel={renderKnurled(o)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\t\t\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</RadioGroup>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst options = [\n\t'NO',\n\t'YES',\n];\n\nfunction renderKnurled(raw) {\n\tif (raw === 'YES') {\n\t\treturn 'Sim';\n\t}\n\n\treturn 'Não';\n}\n\nKnurled.propTypes = {\n\tknurled: PropTypes.bool,\n\tsetKnurled: PropTypes.func.isRequired,\n};\n\nexport default Knurled;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/styles';\nimport Material from './Material';\nimport HeatTreatment from './HeatTreatment';\nimport SuperficialTreatment from './SuperficialTreatment';\nimport Finishing from './Finishing';\nimport Tolerance from './Tolerance';\nimport Screw from './Screw';\nimport Engraving from './Engraving';\nimport Report from './Report';\nimport Knurled from './Knurled';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemEdit.scss';\n\nfunction QuotationItemEdit({classes, item, open, onCancel}) {\n\tconst [materialType, setMaterialType] = React.useState(item.material_type);\n\tconst [heatTreatment, setHeatTreatment] = React.useState(item.heat_treatment);\n\tconst [superficialTreatment, setSuperficialTreatment] = React.useState(item.superficial_treatment);\n\tconst [tolerance, setTolerance] = React.useState(item.tolerance);\n\tconst [finishing, setFinishing] = React.useState(item.finishing);\n\tconst [screw, setScrew] = React.useState(item.screw);\n\tconst [engraving, setEngraving] = React.useState(item.engraving);\n\tconst [knurled, setKnurled] = React.useState(item.knurled);\n\tconst [report, setReport] = React.useState(item.report);\n\tconst {savePartConfigChanges} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tconst {\n\t\t\tmaterial_type,\n\t\t\theat_treatment,\n\t\t\tsuperficial_treatment,\n\t\t} = item;\n\n\t\tif (materialType.id === material_type.id) {\n\t\t\tsetHeatTreatment(heat_treatment);\n\t\t\tsetSuperficialTreatment(superficial_treatment);\n\t\t} else {\n\t\t\tsetHeatTreatment(null);\n\t\t\tsetSuperficialTreatment(null);\n\t\t}\n\t}, [item, materialType]);\n\n\tfunction handleSaveConfig() {\n\t\tfunction processTolerance(raw) {\n\t\t\tif (!raw) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn parseFloat('0.' + raw);\n\t\t}\n\n\t\tsavePartConfigChanges({\n\t\t\tpart_id: item.id,\n\t\t\tmaterial_type_id: materialType.id,\n\t\t\theat_treatment_id: heatTreatment ? heatTreatment.id : null,\n\t\t\tsuperficial_treatment_id: superficialTreatment ? superficialTreatment.id : null,\n\t\t\ttolerance: processTolerance(tolerance),\n\t\t\tfinishing,\n\t\t\tscrew,\n\t\t\tengraving,\n\t\t\tknurled,\n\t\t\treport,\n\t\t\tamount: item.amount,\n\t\t});\n\n\t\tonCancel();\n\t}\n\n\tconst fullScreen = useMediaQuery('(max-width:600px)');\n\n\tconst hasChanged = item.material_type.id !== materialType.id ||\n\t\tJSON.stringify(heatTreatment) !== JSON.stringify(item.heat_treatment) ||\n\t\tJSON.stringify(superficialTreatment) !== JSON.stringify(item.superficial_treatment) ||\n\t\ttolerance !== item.tolerance ||\n\t\tfinishing !== item.finishing ||\n\t\tJSON.stringify(screw) !== JSON.stringify(item.screw) ||\n\t\tengraving !== item.engraving ||\n\t\treport !== item.report ||\n\t\tknurled !== item.knurled;\n\n\tconst ConfigEditComponents = [\n\t\t<Material\n\t\t\tmaterialType={materialType}\n\t\t\tsetMaterialType={setMaterialType}\n\t\t/>,\n\t\t<HeatTreatment\n\t\t\theatTreatment={heatTreatment}\n\t\t\tsetHeatTreatment={setHeatTreatment}\n\t\t\tmaterialTypeId={materialType.id}\n\t\t/>,\n\t\t<SuperficialTreatment\n\t\t\tsuperficialTreatment={superficialTreatment}\n\t\t\tsetSuperficialTreatment={setSuperficialTreatment}\n\t\t\tmaterialTypeId={materialType.id}\n\t\t/>,\n\t\t<Finishing\n\t\t\tfinishing={finishing}\n\t\t\tsetFinishing={setFinishing}\n\t\t/>,\n\t\t<Tolerance\n\t\t\ttolerance={tolerance}\n\t\t\tsetTolerance={setTolerance}\n\t\t/>,\n\t\t<Screw\n\t\t\tscrew={screw}\n\t\t\tsetScrew={setScrew}\n\t\t/>,\n\t\t<Engraving\n\t\t\tengraving={engraving}\n\t\t\tsetEngraving={setEngraving}\n\t\t/>,\n\t\t<Knurled\n\t\t\tknurled={knurled}\n\t\t\tsetKnurled={setKnurled}\n\t\t/>,\n\t\t<Report\n\t\t\treport={report}\n\t\t\tsetReport={setReport}\n\t\t/>,\n\t];\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick={true}\n\t\t\tdisableEscapeKeyDown={true}\n\t\t\tfullWidth\n\t\t\tfullScreen={fullScreen}\n\t\t\tmaxWidth=\"lg\"\n\t\t\topen={open}\n\t\t\tscroll=\"body\"\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableTypography={true}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</Typography>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent className={classes.dialogContent}>\n\t\t\t\t<div className=\"quotation-item-edit__panels\">\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t{ConfigEditComponents.map((c, cIndex) => (\n\t\t\t\t\t\t\t<React.Fragment key={'edit-component-' + cIndex}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{c}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Divider light />\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={!hasChanged}\n\t\t\t\t\tonClick={handleSaveConfig}\n\t\t\t\t>\n\t\t\t\t\tSalvar\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst styles = {\n\tdialogContent: {\n\t\tpadding: 0,\n\t\tminHeight: '32rem',\n\t\tmaxHeight: '32rem',\n\t},\n\tappBar: {\n\t\tbackgroundColor: '#fff',\n\t},\n\tpanels: {\n\t\tpaddingTop: '1rem',\n\t\tpaddingLeft: '0.5rem',\n\t\tpaddingRight: '0.5rem',\n\t},\n};\n\nQuotationItemEdit.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuotationItemEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport QuotationItemEdit from '../QuotationItemEdit';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction HeaderComponent({index, item}) {\n\tconst [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\tconst {\n\t\titemsLoading,\n\t\tremoveItem,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleOpenEdit() {\n\t\tsetEditDialogOpen(true);\n\t}\n\n\tfunction handleCloseEdit() {\n\t\tsetEditDialogOpen(false);\n\t}\n\n\tfunction handleRemoveItem() {\n\t\tif (window.confirm('Remover peça?')) {\n\t\t\tremoveItem(index);\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName=\"quotation-item-header\"\n\t\t\t>\n\t\t\t\t<Grid item className=\"quotation-item-header__part-name\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className=\"quotation-item-value\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleOpenEdit}\n\t\t\t\t\t\ttitle=\"Editar peça\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleRemoveItem}\n\t\t\t\t\t\ttitle=\"Remover peça\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<QuotationItemEdit\n\t\t\t\titem={item}\n\t\t\t\topen={editDialogOpen}\n\t\t\t\tonCancel={handleCloseEdit}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nHeaderComponent.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default HeaderComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles} from '@material-ui/core/styles';\n\nfunction BaseConfigComponent({classes, label, value}) {\n\tlet valueToRender = value;\n\n\tif (!value && value !== 0) {\n\t\tvalueToRender = 'Não informado';\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tdirection=\"column\"\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\"\n\t\t\tclassName={classes.container}\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t\tclassName={classes.containerLabel}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t>\n\t\t\t\t{valueToRender}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tcontainer: {\n\t\tcolor: 'rgba(69, 90, 100, 0.7)',\n\t\tfontSize: '0.8rem',\n\t},\n\tcontainerLabel: {\n\t\tfontWeight: 'bold',\n\t},\n};\n\n\nBaseConfigComponent.propTypes = {\n\tclasses: PropTypes.object,\n\tlabel: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t]),\n};\n\nexport default withStyles(styles)(BaseConfigComponent);\n","/**\n * Almost all numbers are going to be multiplied by 100\n * This function corrects it to render to the user\n * @param {number} raw\tNumber multiplied by 100\n * @return {number}\t\tCorrect number to render\n */\nexport function renderNumber(raw) {\n\treturn (parseInt(raw, 10)/100).toFixed(2);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { renderNumber } from '../../libs/format/number';\n\nfunction FooterComponent({item}) {\n\tconst {\n\t\tamount,\n\t\tunit_price,\n\t} = item;\n\n\tconst [amountToRender, setAmountToRender] = React.useState(amount);\n\tconst {\n\t\titemsLoading,\n\t\tsavePartConfigChanges,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (/^\\d*$/.test(newValue)) {\n\t\t\tif (!isNaN(newValue) && newValue !== '') {\n\t\t\t\tnewValue = parseInt(newValue, 10);\n\t\t\t}\n\n\t\t\tsetAmountToRender(newValue);\n\t\t}\n\t}\n\n\tfunction handleCommitAmountChange() {\n\t\tif (amountToRender !== '' && amountToRender !== amount) {\n\t\t\tsavePartConfigChanges({\n\t\t\t\tpart_id: item.id,\n\t\t\t\tmaterial_type_id: item.material_type.id,\n\t\t\t\theat_treatment_id: item.heat_treatment ? item.heat_treatment.id : null,\n\t\t\t\tsuperficial_treatment_id: item.superficial_treatment ? item.superficial_treatment.id : null,\n\t\t\t\ttolerance: item.tolerance,\n\t\t\t\tfinishing: item.finishing,\n\t\t\t\tscrew_amount: item.screw_amount,\n\t\t\t\tamount: amountToRender,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleOnKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\thandleCommitAmountChange();\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tdirection=\"row\"\n\t\t\tjustify=\"space-between\"\n\t\t\talignItems=\"center\"\n\t\t\tclassName=\"quotation-item-footer\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tclassName=\"quotation-item-footer__amount\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"quotation-item-footer__amount-label\"\n\t\t\t\t>\n\t\t\t\t\tQuantidade\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"quotation-item-footer__amount-value\"\n\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\tonBlur={handleCommitAmountChange}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonKeyPress={handleOnKeyPress}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={amountToRender}\n\t\t\t\t/>\t\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tclassName=\"quotation-item-footer__unit-price\"\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\titemsLoading ?\n\t\t\t\t\t<CircularProgress color=\"primary\" size={20} />\n\t\t\t\t\t:\n\t\t\t\t\t`R$ ${renderNumber(unit_price)}/unidade`\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nFooterComponent.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default FooterComponent;\n","export function renderScrew(raw) {\n\tif (!raw) {\n\t\treturn raw;\n\t}\n\n\tconst {type, amount} = raw;\n\n\tif (type === 'EXTERNAL') {\n\t\treturn 'Rosca externa';\n\t}\n\n\treturn `${amount} rosca(s) interna(s)`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport HeaderComponent from './HeaderComponent';\nimport BaseConfigComponent from '../BaseConfig';\nimport FooterComponent from './FooterComponent';\nimport { renderFinishing } from '../../libs/format/finishing';\nimport { renderScrew } from '../../libs/format/screw';\nimport './QuotationItem.scss';\n\nfunction QuotationItem({index, item}) {\n\tconst {\n\t\tmaterial_type,\n\t\theat_treatment,\n\t\tsuperficial_treatment,\n\t\ttolerance,\n\t\tfinishing,\n\t\tscrew,\n\t} = item;\n\n\treturn (\n\t\t<div className=\"quotation-item\">\n\t\t\t<HeaderComponent\n\t\t\t\tindex={index}\n\t\t\t\titem={item}\n\t\t\t/>\n\t\t\t<Divider light />\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-around\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tspacing={2}\n\t\t\t\tclassName=\"quotation-item-config\"\n\t\t\t>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\t\tvalue={material_type.name}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Tratamento térmico\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\theat_treatment ? heat_treatment.name : null\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Tratamento superficial\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tsuperficial_treatment ? superficial_treatment.name : null\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Menor tolerância\"\n\t\t\t\t\t\tvalue={tolerance}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Acabamento\"\n\t\t\t\t\t\tvalue={renderFinishing(finishing)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Roscas\"\n\t\t\t\t\t\tvalue={renderScrew(screw)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Divider light />\n\t\t\t<FooterComponent\n\t\t\t\titem={item}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nQuotationItem.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default QuotationItem;\n","import {createContext} from 'react';\n\nexport default createContext();\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport AppContext from '../../contexts/AppContext';\nimport './UserLogin.scss';\n\nfunction UserLogin() {\n\tconst [form, setForm] = React.useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\tconst [isEmailValid, setIsEmailValid] = React.useState(true);\n\tconst {\n\t\tuserLoading,\n\t\tuserLogin,\n\t\thandleOpenSnackbar,\n\t} = React.useContext(AppContext);\n\n\tReact.useEffect(() => {\n\t\tif (form.email !== '') {\n\t\t\tsetIsEmailValid(/^.+@.+\\..+(\\..+)*$/.test(form.email));\n\t\t}\n\t}, [form.email]);\n\n\tfunction handleFormChange(event) {\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t}\n\n\tfunction handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (!isEmailValid || !form.email) {\n\t\t\thandleOpenSnackbar('E-mail inválido');\n\t\t} else if (!form.password) {\n\t\t\thandleOpenSnackbar('Por favor inserir uma senha');\n\t\t} else {\n\t\t\tuserLogin(form.email, form.password);\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tnoValidate\n\t\t\tautoComplete=\"off\"\n\t\t\tonSubmit={handleFormSubmit}\n\t\t>\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={!isEmailValid}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tlabel=\"E-mail\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleFormChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={form.email}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tlabel=\"Senha\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleFormChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={form.password}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{\n\t\t\t\t\t\tuserLoading\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<CircularProgress color=\"primary\" />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvalue=\"Log In\"\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default UserLogin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nconst steps = [\n\t'Resumo do pedido',\n\t'Entrega',\n\t'Confirmar pedido',\n];\n\nfunction OrderStepper({activeStep}) {\n\treturn (\n\t\t<Stepper activeStep={activeStep}>\n\t\t\t{steps.map(label => (\n\t\t\t\t<Step key={'order-step-labe-' + label}>\n\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t</Step>\n\t\t\t))}\n\t\t</Stepper>\n\t);\n}\n\nOrderStepper.propTypes = {\n\tactiveStep: PropTypes.number.isRequired,\n};\n\nexport default OrderStepper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { renderNumber } from '../../libs/format/number';\nimport { renderFinishing } from '../../libs/format/finishing';\n\nfunction ItemSummary({item}) {\n\tconst {\n\t\tmaterial_type,\n\t\theat_treatment,\n\t\tsuperficial_treatment,\n\t\ttolerance,\n\t\tfinishing,\n\t\tscrew_amount,\n\t\tunit_price,\n\t\tamount,\n\t} = item;\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tspacing={1}\n\t\t\tclassName=\"quotation-order__config-list\"\n\t\t>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tclassName=\"quotation-order__item\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item className=\"quotation-order__item-name\">\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className=\"quotation-order__item-whole-price\">\n\t\t\t\t\t\t{`R$ ${renderNumber(amount * unit_price)}`}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tvalue={material_type.name}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Tratamento térmico\"\n\t\t\t\t\tvalue={heat_treatment ? heat_treatment.name : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Tratamento superficial\"\n\t\t\t\t\tvalue={superficial_treatment ? superficial_treatment.name : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Mínima tolerância\"\n\t\t\t\t\tvalue={tolerance ? tolerance : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Acabamento\"\n\t\t\t\t\tvalue={renderFinishing(finishing)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Roscas\"\n\t\t\t\t\tvalue={screw_amount}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Quantidade\"\n\t\t\t\t\tvalue={amount}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Preço por unidade\"\n\t\t\t\t\tvalue={`R$ ${renderNumber(unit_price)}`}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction RenderConfig({label, value}) {\n\treturn (\n\t\t<Grid container spacing={1} className=\"quotation-order-config\">\n\t\t\t<Grid item className=\"quotation-order-config__label\">{`${label}:`}</Grid>\n\t\t\t<Grid item className=\"quotation-order-config__value\">{value || '—'}</Grid>\n\t\t</Grid>\n\t);\n}\n\nItemSummary.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default ItemSummary;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport ItemSummary from './ItemSummary';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction ItemsList() {\n\tconst {items} = React.useContext(QuotationContext);\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t{items.map(item => (\n\t\t\t\t<React.Fragment key={item.id}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ItemSummary\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Grid>\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n\nexport default ItemsList;\n","import {createContext} from 'react';\n\nexport default createContext();\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { renderDeliveryOption } from '../../libs/format/delivery';\n\nconst deliveryOptions = [\n\t'WORKINGDAYS_15',\n\t'WORKINGDAYS_10',\n];\n\nfunction deliveryDate(orderInfo) {\n\tif (!orderInfo || !orderInfo.delivery\n\t\t|| !orderInfo.delivery.at) {\n\t\treturn '';\n\t}\n\n\treturn (new Date(orderInfo.delivery.at)).toLocaleDateString('pt-BR');\n}\n\nfunction Delivery() {\n\tconst {\n\t\tdeliveryOption,\n\t\tsetDeliveryOption,\n\t\torderInfo,\n\t\torderLoading,\n\t} = React.useContext(QuotationOrderContext);\n\n\tfunction handleDeliveryOptionChange(newOption) {\n\t\treturn function (event) {\n\t\t\tsetDeliveryOption(newOption);\n\t\t};\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\tOpções de data de entrega\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t{deliveryOptions.map(option => (\n\t\t\t\t<Grid item xs={3} key={option}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={orderLoading}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tonClick={handleDeliveryOptionChange(option)}\n\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\toption === deliveryOption ?\n\t\t\t\t\t\t\t'outlined'\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t'text'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderDeliveryOption(option)}\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\t{`Data prevista de entrega: ${deliveryDate(orderInfo)}`}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default Delivery;\n","export function renderDeliveryOption(raw) {\n\tconst days = raw.split('_')[1];\n\n\treturn `${days} dias úteis`;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { renderNumber } from '../../libs/format/number';\n\nfunction Confirmation() {\n\tconst {\n\t\torderInfo,\n\t\t//orderLoading,\n\t} = React.useContext(QuotationOrderContext);\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\t{\n\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t`Sub total das peças: R$ ${renderNumber(orderInfo.subtotal)}`\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\t{\n\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t`Custo de entrega: R$ ${renderNumber(orderInfo.delivery.price)}`\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\t{\n\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t`Total: R$ ${renderNumber(orderInfo.subtotal + orderInfo.delivery.price)}`\n\t\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default Confirmation;\n","import React from 'react';\nimport ItemsList from './ItemsList';\nimport Delivery from './Delivery';\nimport Confirmation from './Confirmation';\n\nconst stepContents = [\n\t<ItemsList />,\n\t<Delivery />,\n\t<Confirmation />,\n];\n\nfunction OrderStepContent(activeStep) {\n\tif (activeStep < stepContents.length) {\n\t\treturn stepContents[activeStep];\n\t}\n\n\treturn null;\n}\n\nexport default OrderStepContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nfunction OrderStepperButtons(props) {\n\tconst {\n\t\tonCancel,\n\t\tisLoggedIn,\n\t\tactiveStep,\n\t\tsetActiveStep,\n\t\tmaxStep,\n\t} = props;\n\n\tfunction handleNextClick() {\n\t\tsetActiveStep(activeStep + 1);\n\t}\n\n\tfunction handlePreviousClick() {\n\t\tsetActiveStep(activeStep - 1);\n\t}\n\n\tfunction handleConfirmClick() {\n\t\talert('pedido feito');\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tjustify=\"space-between\"\n\t\t\talignItems=\"center\"\n\t\t\tspacing={1}\n\t\t>\n\t\t\t{\n\t\t\t\tisLoggedIn && (\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\t\tonClick={handlePreviousClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAnterior\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tactiveStep !== maxStep -1 ? (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleNextClick}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tPróximo\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleConfirmClick}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tConfirmar\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t)\n\t\t\t}\n\t\t\t<Grid item>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nOrderStepperButtons.propTypes = {\n\tonCancel: PropTypes.func.isRequired,\n\tisLoggedIn: PropTypes.bool.isRequired,\n\tactiveStep: PropTypes.number.isRequired,\n\tsetActiveStep: PropTypes.func.isRequired,\n\tmaxStep: PropTypes.number.isRequired,\n};\n\nexport default OrderStepperButtons;\n","export class FetchError extends Error {\n\tconstructor(message, status) {\n\t\tsuper(message);\n\t\tthis.status = status;\n\t}\n}\n\nexport function processFetchError(err) {\n\tif (err instanceof FetchError) {\n\t\tconsole.error(err.status, err.message);\n\t} else if (err instanceof Error) {\n\t\tconsole.error(err.message);\n\t} else {\n\t\tconsole.error(err);\n\t}\n}\n","import { FetchError } from '../errors';\n\nexport async function handleGraphQLResponse(res, dataKey) {\n\ttry {\n\t\tconst {ok} = res;\n\n\t\tconst {data, errors} = await res.json();\n\n\t\tif (!ok) {\n\t\t\tif (!errors || errors.length === 0) {\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\n\t\t\tconst {extensions} = errors[0]\n\n\t\t\tif (extensions && extensions.message && extensions.status) {\n\t\t\t\tthrow new FetchError(extensions.message, extensions.status);\n\t\t\t} else {\n\t\t\t\tconsole.error('Error message:', errors[0].message);\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdata: data[dataKey],\n\t\t\terror: null,\n\t\t};\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: err.status,\n\t\t\t\tmessage: err.message,\n\t\t\t},\n\t\t};\n\t}\n}\n","import { handleGraphQLResponse } from './handler';\n\nconst changePartOptionsQuery = `\nmutation RootMutation($input: PartOptionsInputType!) {\n\tchangePartOptions(input: $input) {\n\t\tid\n\t\tname\n\t\tmaterial_type {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\theat_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\tsuperficial_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\ttolerance\n\t\tfinishing\n\t\tscrew {\n\t\t\ttype\n\t\t\tamount\n\t\t}\n\t\tamount\n\t\tunit_price\n\t}\n}\n`.trim();\n\nconst partBatchInfoQuery = `\nmutation RootMutation($input: PartBatchInfoInputType!) {\n\tpartBatchInfo(input: $input) {\n\t\tsubtotal\n\t\tdelivery {\n\t\t\tprice\n\t\t\tat\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Change Part options\n * @param {object} input\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {number} screw_amount\t\t\t\t\tPart's number of screws\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @return {object}\n *            {object} data\t\t\t\t\t\t\tGraphQL response data. It can be null\n *                {string} id\t\t\t\t\t\tPart's id (uuid)\n *                {string} name\t\t\t\t\t\tPart's name\n *                {object} material_type\t\t\tPart's material type\n *                    {string} name\t\t\t\t\tMaterial type's name\n *                    {string} id\t\t\t\t\tMaterial type's id\n *                {object} heat_treatment\t\t\tPart's heat treatment. It can be null\n *                    {string} name\t\t\t\t\tHeat Treatment's name\n *                    {string} id\t\t\t\t\tHeat treatment's id\n *                {object} superficial_treatment\tPart's superficial treatment. It can be null\n *                    {string} name\t\t\t\t\tSuperficial Treatment's name\n *                    {string} id\t\t\t\t\tSuperficial treatment's id\n *                {string} tolerance\t\t\t\tPart's tolerance. It can be null.\n *                {string} finishing\t\t\t\tPart's finishing. It can be null\n *                {number} screw_amount\t\t\t\tPart's number of screws\n *                {number} unit_price\t\t\t\tPart's unit price. It's multiplied by 100 (int)\n *            {object} error\t\t\t\t\t\tError object. It can be null\n *                {number} status\t\t\t\t\tHTTP status code\n *                {string} message\n */\nexport async function changePartConfig(input)  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: changePartOptionsQuery,\n\t\t\t\tvariables: { input },\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'changePartOptions');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n\n/**\n * Get batch info\n * @param {object[]} parts\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {object} screw\t\t\t\t\t\tPart's screw config\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @param {string} delivery\t\t\t\t\t\t\tDelivery option\n * @return {object}\n *             {number} subtotal\t\t\t\t\tBatch subtotal\n *             {object} delivery\t\t\t\t\tDelivery info\n *                 {number} price\t\t\t\t\tDelivery price\n *                 {string} at\t\t\t\t\t\tEstimated delivery date\n */\nexport async function partBatchInfo(parts, delivery = 'WORKINGDAYS_15')  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: partBatchInfoQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tdelivery,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'partBatchInfo');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/core/styles';\nimport UserLogin from '../UserLogin';\nimport OrderStepper from './OrderStepper';\nimport OrderStepContent from './OrderStepContent';\nimport OrderStepperButtons from './OrderStepperButtons';\nimport AppContext from '../../contexts/AppContext';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { partBatchInfo } from '../../libs/fetch/part';\nimport './QuotationOrder.scss';\n\nfunction processPart(part) {\n\treturn {\n\t\tpart_id: part.id,\n\t\tmaterial_type_id: part.material_type.id,\n\t\theat_treatment_id: part.heat_treatment ? part.heat_treatment.id : null,\n\t\tsuperficial_treatment_id: part.superficial_treatment ? part.superficial_treatment.id : null,\n\t\ttolerance: part.tolerance,\n\t\tfinishing: part.finishing,\n\t\tscrew_amount: part.screw_amount,\n\t\tamount: part.amount,\n\t};\n}\n\nfunction QuotationOrder({classes, open, onCancel}) {\n\tconst [activeStep, setActiveStep] = React.useState(0);\n\tconst [deliveryOption, setDeliveryOption] = React.useState('WORKINGDAYS_15');\n\tconst [orderInfo, setOrderInfo] = React.useState(null);\n\tconst [orderLoading, setOrderLoading] = React.useState(true);\n\tconst {\n\t\tuser,\n\t\thandleOpenSnackbar,\n\t} = React.useContext(AppContext);\n\tconst {items} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tif (open) {\n\t\t\tsetActiveStep(0);\n\t\t}\n\t}, [open]);\n\n\tReact.useEffect(() => {\n\t\tif (open) {\n\t\t\tsetOrderLoading(true);\n\n\t\t\tpartBatchInfo(\n\t\t\t\titems.map(processPart),\n\t\t\t\tdeliveryOption\n\t\t\t)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data) {\n\t\t\t\t\t\tsetOrderInfo(response.data);\n\t\t\t\t\t} else if (response.error) {\n\t\t\t\t\t\tif (response.error.status === 500) {\n\t\t\t\t\t\t\thandleOpenSnackbar('Houve um error');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleOpenSnackbar(response.error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsetOrderLoading(false);\n\t\t\t\t});\n\t\t}\n\t}, [open, handleOpenSnackbar, items, deliveryOption]);\n\n\tconst fullScreen = useMediaQuery('(max-width:600px)');\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick={true}\n\t\t\tdisableEscapeKeyDown={false}\n\t\t\tfullWidth\n\t\t\tfullScreen={fullScreen}\n\t\t\tmaxWidth=\"md\"\n\t\t\topen={open}\n\t\t\tscroll=\"body\"\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableTypography={true}\n\t\t\t>\n\t\t\t\t<OrderStepper activeStep={activeStep} />\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent className={classes.dialogContent}>\n\t\t\t\t{\n\t\t\t\t\tuser ?\n\t\t\t\t\t<QuotationOrderContext.Provider value={{\n\t\t\t\t\t\tactiveStep,\n\t\t\t\t\t\tsetActiveStep,\n\t\t\t\t\t\tdeliveryOption,\n\t\t\t\t\t\tsetDeliveryOption,\n\t\t\t\t\t\torderInfo,\n\t\t\t\t\t\torderLoading,\n\t\t\t\t\t\tsetOrderLoading,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t{OrderStepContent(activeStep)}\n\t\t\t\t\t</QuotationOrderContext.Provider>\n\t\t\t\t\t:\n\t\t\t\t\t<UserLogin />\n\t\t\t\t}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<OrderStepperButtons\n\t\t\t\t\tonCancel={onCancel}\n\t\t\t\t\tisLoggedIn={!!user}\n\t\t\t\t\tactiveStep={activeStep}\n\t\t\t\t\tsetActiveStep={setActiveStep}\n\t\t\t\t\tmaxStep={3}\n\t\t\t\t/>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst styles = {\n\tdialogContent: {\n\t\tminHeight: '50vh',\n\t\tmaxHeight: '50vh',\n\t},\n};\n\nQuotationOrder.propTypes = {\n\tclasses: PropTypes.object,\n\topen: PropTypes.bool.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuotationOrder);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport QuotationOrder from '../QuotationOrder';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { renderNumber } from '../../libs/format/number';\nimport './QuotationBasket.scss';\n\nfunction QuotationBasket({items}) {\n\tconst [subtotal, setSubtotal] = React.useState(0);\n\tconst [quotationOrderOpen, setQuotationOrderOpen] = React.useState(false);\n\tconst {itemsLoading} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tsetSubtotal(items.reduce((sum, item) => (\n\t\t\tsum + ( item.unit_price * item.amount )\n\t\t), 0));\n\t}, [items]);\n\n\tfunction handleOpenQuotationOrder() {\n\t\tsetQuotationOrderOpen(true);\n\t}\n\n\tfunction handleCloseQuotationOrder() {\n\t\tsetQuotationOrderOpen(false);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tclassName=\"quotation-basket\"\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\tclassName=\"quotation-basket__subtotal\"\n\t\t\t\t\titem\n\t\t\t\t>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tclassName=\"quotation-basket__subtotal-label\"\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSub total\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tclassName=\"quotation-basket__subtotal-value\"\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{`R$ ${renderNumber(subtotal)}`}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleOpenQuotationOrder}\n\t\t\t\t\t>\n\t\t\t\t\t\tFazer pedido\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<QuotationOrder\n\t\t\t\topen={quotationOrderOpen}\n\t\t\t\tonCancel={handleCloseQuotationOrder}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\n\nQuotationBasket.propTypes = {\n\titems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default QuotationBasket;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport QuotationItem from '../QuotationItem';\nimport QuotationBasket from '../QuotationBasket';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemList.scss';\n\nfunction QuotationItemList({classes}) {\n\tconst {\n\t\titems,\n\t\titemsLoading,\n\t} = React.useContext(QuotationContext);\n\n\tif ((!items || items.length === 0) && !itemsLoading) {\n\t\treturn (\n\t\t\t<div className=\"quotation-item-list__empty\">\n\t\t\t\t<CloudUploadIcon className={classes.uploadIcon} />\n\t\t\t\t<span>Faça upload do seu arquivo!</span>\n\t\t\t</div>\n\t\t);\n\t} else if ((!items || items.length === 0) && itemsLoading) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tclassName={classes.loadingGrid}\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize={80}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t>\n\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tkey={'quotation-item-list__item-' + index}\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12}\n\t\t\t\t\t>\n\t\t\t\t\t\t<QuotationItem\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t\t<Grid\n\t\t\t\t\tclassName={classes.basketGrid}\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t>\n\t\t\t\t\t<QuotationBasket\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tuploadIcon: {\n\t\tcolor: 'rgba(69, 90, 100, 0.1)',\n\t\tfontSize: '20rem',\n\t},\n\tloadingGrid: {\n\t\theight: '50vh',\n\t},\n\tbasketGrid: {\n\t\tposition: 'sticky',\n\t\tbottom: '-0.35rem',\n\t\tmarginBottom: '0.25rem',\n\t\tmarginLeft: '0.25rem',\n\t\tmarginRight: '0.25rem',\n\t},\n};\n\nQuotationItemList.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(QuotationItemList);\n","import { handleGraphQLResponse } from './handler';\n\nconst materialsQuery = `\nquery RootQuery {\n\tmaterials {\n\t\tid\n\t\tname\n\t\tmaterial_types {\n\t\t\tid\n\t\t\tname\n\t\t\theat_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tsuperficial_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n}\n`.trim();\n\nexport async function getMaterials() {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: materialsQuery,\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'materials');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport QuotationUpload from '../../components/QuotationUpload';\nimport QuotationItemList from '../../components/QuotationItemList';\nimport AppContext from '../../contexts/AppContext';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { getMaterials } from '../../libs/fetch/material';\nimport { changePartConfig } from '../../libs/fetch/part';\nimport './Quotation.scss';\n\nfunction Quotation() {\n\tconst [items, setItems] = React.useState(mockItems);\n\tconst [itemsLoading, setItemsLoading] = React.useState(false);\n\tconst [materials, setMaterials] = React.useState([]);\n\tconst {handleOpenSnackbar} = React.useContext(AppContext);\n\n\tReact.useEffect(() => {\n\t\tgetMaterials().then(({data, error}) => {\n\t\t\tif (!error) {\n\t\t\t\tsetMaterials(data);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tfunction savePartConfigChanges(input) {\n\t\tsetItemsLoading(true);\n\n\t\tchangePartConfig(input)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (data) {\n\t\t\t\t\tconst newItems = items.map(item => {\n\t\t\t\t\t\tif (item.id === input.part_id) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t});\n\n\t\t\t\t\tsetItems(newItems);\n\n\t\t\t\t\thandleOpenSnackbar('Atualização com sucesso');\n\t\t\t\t} else if (error) {\n\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetItemsLoading(false);\n\t\t\t});\n\t}\n\n\tfunction addItem(item) {\n\t\tsetItems([...items, item]);\n\t}\n\n\tfunction removeItem(index) {\n\t\tconst newItems = items.filter((_, i) => i !== index);\n\n\t\tsetItems(newItems);\n\t}\n\n\treturn (\n\t\t<QuotationContext.Provider value={{\n\t\t\titems,\n\t\t\titemsLoading,\n\t\t\tsetItemsLoading,\n\t\t\tsavePartConfigChanges,\n\t\t\taddItem,\n\t\t\tremoveItem,\n\t\t\tmaterials,\n\t\t}}>\n\t\t\t<Container className=\"quotation-view__container\" maxWidth=\"lg\">\n\t\t\t\t<QuotationItemList />\n\t\t\t\t<QuotationUpload />\n\t\t\t</Container>\n\t\t</QuotationContext.Provider>\n\t);\n}\n\nconst mockItems = Array(0).fill(JSON.parse('{\"id\":\"e5906b4e-0db2-47f3-8f58-6195d0e0ecef\",\"name\":\"test.stp\",\"material_type\":{\"id\":\"cfc560d7-b2e1-47d8-921c-1c4a5720205d\",\"name\":\"Alumínio 5083 / 5082\"},\"heat_treatment\":null,\"superficial_treatment\":null,\"tolerance\":null,\"finishing\":null,\"screw\":null,\"amount\":1,\"unit_price\":31657}'));\n\nexport default Quotation;\n","import { handleGraphQLResponse } from './handler';\n\nconst loginQuery = `\nmutation RootMutation($input: LoginInputType!) {\n\tlogin (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\nconst registerUserQuery = `\nmutation RootMutation($input: RegisterUserInputType!) {\n\tregisterUser (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Log in function\n * @param {string} email\tUser email\n * @param {string} password\tUser password\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function login(email, password) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: loginQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: { email, password, },\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'login');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n\n/**\n * Register user function\n * @param {string} name\t\t\t\t\t\tUser name\n * @param {string} phone_number\t\t\t\tUser phone_numbe\n * @param {string} email\t\t\t\t\tUser email\n * @param {string} password\t\t\t\t\tUser password\n * @param {object[]} addresses\t\t\t\tUser addresses\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function registerUser(name, phone_number, email, password, addresses) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: registerUserQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tphone_number,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t\taddresses\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'registerUser');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n","function hasLocalStorage() {\n\treturn 'localStorage' in window;\n}\n\nfunction getUserJwt() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userJwt');\n}\n\nfunction getUserName() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userName');\n}\n\nfunction getUserEmail() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userEmail');\n}\n\nexport function getUserCredentials() {\n\treturn {\n\t\tname: getUserName(),\n\t\temail: getUserEmail(),\n\t\ttoken: getUserJwt(),\n\t};\n}\n\nfunction setUserName(name) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userName', name);\n}\n\nfunction setUserJwt(jwt) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userJwt', jwt);\n}\n\nfunction setUserEmail(email) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userEmail', email);\n}\n\nexport function setUserCredentials(name, email, jwt) {\n\tsetUserName(name);\n\tsetUserEmail(email);\n\tsetUserJwt(jwt);\n}\n","import idb from './';\n\nexport function saveUserAddresses(userEmail, addresses) {\n\treturn idb()\n\t\t.then(db => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst store = db.transaction('userAddress', 'readwrite')\n\t\t\t\t\t.objectStore('userAddress');\n\n\t\t\t\taddresses.forEach(ad => {\n\t\t\t\t\tconst putRequest = store.put({userEmail, ...ad});\n\n\t\t\t\t\tputRequest.onerror = function (event) {\n\t\t\t\t\t\tconsole.error(putRequest.error);\n\t\t\t\t\t\treject(putRequest.error);\n\t\t\t\t\t};\n\n\t\t\t\t\tputRequest.onsuccess = function (event) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\treturn Promise.resolve();\n\t\t});\n}\n","export default function idb(DBName = 'mech4u', DBVersion = 1) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!('indexedDB' in window)) {\n\t\t\tconsole.error('Browser doesn\\'t support indexedDB');\n\t\t\treject(new Error('Browser doesn\\'t support indexedDB'));\n\t\t}\n\n\t\tconst request = window.indexedDB.open(DBName, DBVersion);\n\n\t\trequest.onerror = function (event) {\n\t\t\tconsole.error('Error opening indexedDB', request.error);\n\t\t\treject(request.error);\n\t\t};\n\n\t\trequest.onsuccess = function (event) {\n\t\t\tresolve(event.target.result);\n\t\t};\n\n\t\trequest.onupgradeneeded = function (event) {\n\t\t\tconst db = event.target.result;\n\n\t\t\tconst userStore = db.createObjectStore('userAddress', { keyPath: 'id' });\n\n\t\t\tuserStore.createIndex('userEmail', 'userEmail', { unique: false });\n\t\t\tuserStore.createIndex('id', 'id', { unique: true });\n\t\t};\n\t});\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AppBar from './components/AppBar';\nimport QuotationView from './views/Quotation';\nimport AppContext from './contexts/AppContext';\nimport { login, registerUser } from './libs/fetch/user';\nimport { setUserCredentials } from './libs/localStorage';\nimport { saveUserAddresses } from './libs/indexedDB/userDB';\nimport './App.scss';\n\nfunction App() {\n\tconst [user, setUser] = React.useState(null);\n\tconst [userLoading, setUserLoading] = React.useState(false);\n\tconst [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\tconst [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n\tReact.useEffect(() => {\n\t\tsetUser(JSON.parse(`{\"data\":{\"login\":{\"name\":\"Davi Souza\",\"email\":\"ddas.souza@gmail.com\",\"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQzMGU1YjdlLTE4ZmEtNDU3Ny1iYjFjLTJmYmIyNDIxYjgxMCIsIm5hbWUiOiJEYXZpIFNvdXphIiwiZW1haWwiOiJkZGFzLnNvdXphQGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IjEyOTgxNzY0NTkzIiwiY3JlYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwidXBkYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwiZGVsZXRlZEF0IjpudWxsLCJhZGRyZXNzZXMiOlt7ImlkIjoiOGRjMWY3MWQtODlhMS00ZTg0LTgwYWUtMTI2MzVjNjJmOTdkIiwic3RhdGUiOiJTUCIsIm11bmljaXBhbGl0eSI6IlPDo28gSm9zw6kgZG9zIENhbXBvcyIsImFkZHJlc3MiOiJSdWEgUmVwdWJsaWNhIGRvIElyYXF1ZSIsImFkZHJlc3NfbnVtYmVyIjo4MCwiY29tcGxlbWVudCI6IkFwdCA2NEIiLCJwb3N0Y29kZSI6IjEyMjE2LTU0MCJ9XSwiaWF0IjoxNTY5ODM2Njc3LCJleHAiOjE1NzI0Mjg2Nzd9.hqDc7kh_jF10pRceaHUt2_2a9gKI68lP1AsTMvPDN70\",\"addresses\":[{\"id\":\"8dc1f71d-89a1-4e84-80ae-12635c62f97d\",\"state\":\"SP\",\"municipality\":\"São José dos Campos\",\"address\":\"Rua Republica do Iraque\",\"address_number\":80,\"complement\":\"Apt 64B\",\"postcode\":\"12216-540\"}]}}}`));\n\t}, []);\n\n\tfunction userLogin(email, password) {\n\t\tsetUserLoading(true);\n\n\t\tlogin(email, password)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => {\n\t\t\t\tsetUserLoading(false);\n\t\t\t});\n\t}\n\n\tfunction userRegister(name, phoneNumber, email, password, addresses) {\n\t\tregisterUser(name, phoneNumber, email, password, addresses)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error);;\n\t}\n\n\tfunction handleOpenSnackbar(message) {\n\t\tsetSnackbarMessage(message);\n\t\tsetSnackbarOpen(true);\n\t}\n\n\tfunction handleCloseSnackbar() {\n\t\tsetSnackbarOpen(false);\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={{\n\t\t\tuser,\n\t\t\tuserLoading,\n\t\t\tuserLogin,\n\t\t\tuserRegister,\n\t\t\thandleOpenSnackbar,\n\t\t}}>\n\t\t\t<AppBar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/quotation\" component={QuotationView} />\n\t\t\t\t<Route render={() => <Redirect to=\"/quotation\" />} />\n\t\t\t</Switch>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'left',\n\t\t\t\t}}\n\t\t\t\topen={snackbarOpen}\n\t\t\t\tautoHideDuration={5000}\n\t\t\t\tonClose={handleCloseSnackbar}\n\t\t\t\tmessage={<span id=\"message-id\">{snackbarMessage}</span>}\n\t\t\t\taction={\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tonClick={handleCloseSnackbar}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t/>\n\t\t</AppContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\nimport 'typeface-roboto';\n\nconst platformTheme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#455a64', // rgb(69, 90, 100)\n\t\t\tdark: '#1c313a',\n\t\t\tlight: '#718792',\n\t\t\tcontrastText: '#ffffff',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#ef5350',\n\t\t\tdark: '#b61827',\n\t\t\tlight: '#ff867c',\n\t\t\tcontrastText: '#000000',\n\t\t},\n\t},\n});\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ThemeProvider theme={platformTheme}>\n\t\t\t<CssBaseline />\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}