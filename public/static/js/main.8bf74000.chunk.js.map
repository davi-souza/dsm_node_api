{"version":3,"sources":["components/AppBar/AppBar.js","contexts/QuotationContext.js","libs/fetch/upload.js","components/QuotationUpload/QuotationUpload.js","components/QuotationItemEdit/Materials.js","components/QuotationItemEdit/Treatments.js","components/QuotationItemEdit/FirstTabPanel.js","libs/format/finishing.js","components/QuotationItemEdit/Finishing.js","components/QuotationItemEdit/Tolerance.js","components/QuotationItemEdit/Screw.js","components/QuotationItemEdit/SecondTabPanel.js","components/QuotationItemEdit/QuotationItemEdit.js","components/QuotationItem/HeaderComponent.js","components/BaseConfig/BaseConfig.js","libs/format/number.js","components/QuotationItem/FooterComponent.js","components/QuotationItem/QuotationItem.js","contexts/AppContext.js","components/UserLogin/UserLogin.js","components/QuotationOrder/ItemSummary.js","contexts/QuotationOrderContext.js","components/QuotationOrder/Delivery.js","libs/format/delivery.js","components/QuotationOrder/PriceInfo.js","components/QuotationOrder/ItemsOrderInfo.js","components/QuotationOrder/ItemsList.js","libs/errors/index.js","libs/fetch/handler.js","libs/fetch/part.js","components/QuotationOrder/QuotationOrder.js","components/QuotationBasket/QuotationBasket.js","components/QuotationItemList/QuotationItemList.js","libs/fetch/material.js","views/Quotation/Quotation.js","libs/fetch/user.js","libs/localStorage/index.js","libs/indexedDB/userDB.js","libs/indexedDB/index.js","App.js","serviceWorker.js","index.js"],"names":["style","appBar","backgroundColor","color","marginBottom","AppBarComponent","AppBar","elevation","position","Toolbar","Typography","variant","createContext","uploadFile","file","a","formData","FormData","append","fetch","method","body","response","ok","data","error","status","message","json","console","QuotationUpload","inputEl","useRef","useContext","QuotationContext","itemsLoading","setItemsLoading","addItem","event","target","files","part","Box","component","id","type","name","ref","onChange","Button","fullWidth","onClick","current","click","disabled","withStyles","materialTypeButton","height","width","fontSize","classes","materialType","setMaterialType","materials","React","Grid","container","spacing","item","xs","map","mat","Fragment","key","material_types","matType","sm","md","className","newMaterialType","Divider","light","treatmentButton","props","useState","heatTreatments","setHeatTreatments","superficialTreatments","setSuperficialTreatments","materialTypeId","heatTreatment","setHeatTreatment","superficialTreatment","setSuperficialTreatment","handleHeatTreatmentClick","newHeatTreatment","e","handleSuperficialTreatmentClick","newSuperficialTreatment","useEffect","material","heat_treatments","materialHeatTreatments","superficial_treatments","materialSuperficialTreatments","hT","sT","FirstTabPanel","renderFinishing","raw","possibleFinishings","finishingButton","finishing","setFinishing","f","newFinishing","Tolerance","tolerance","setTolerance","alignItems","TextField","InputProps","startAdornment","InputAdornment","endAdornment","newValue","value","test","Screw","screwAmount","setScrewAmount","isNaN","parseInt","divider","marginTop","dialogContent","paddingTop","paddingLeft","paddingRight","minHeight","maxHeight","panels","open","onCancel","tabValue","setTabValue","material_type","heat_treatment","superficial_treatment","screw_amount","savePartConfigChanges","fullScreen","useMediaQuery","hasChanged","JSON","stringify","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","scroll","DialogTitle","disableTypography","DialogContent","Tabs","indicatorColor","textColor","scrollButtons","Tab","label","DialogActions","part_id","material_type_id","heat_treatment_id","superficial_treatment_id","parseFloat","amount","HeaderComponent","index","editDialogOpen","setEditDialogOpen","removeItem","direction","justify","IconButton","title","window","confirm","containerLabel","fontWeight","valueToRender","renderNumber","toFixed","FooterComponent","unit_price","amountToRender","setAmountToRender","handleCommitAmountChange","onBlur","onKeyPress","CircularProgress","size","QuotationItem","BaseConfig","UserLogin","email","password","form","setForm","isEmailValid","setIsEmailValid","AppContext","userLoading","userLogin","handleOpenSnackbar","handleFormChange","noValidate","autoComplete","onSubmit","preventDefault","margin","required","RenderConfig","ItemSummary","deliveryOptions","Delivery","QuotationOrderContext","deliveryOption","setDeliveryOption","orderInfo","orderLoading","option","newOption","days","split","renderDeliveryOption","delivery","Date","at","toLocaleDateString","PriceInfo","subtotal","price","ItemsOrderInfo","ItemsList","items","FetchError","Error","handleGraphQLResponse","res","dataKey","errors","length","extensions","changePartOptionsQuery","trim","partBatchInfoQuery","input","credentials","headers","query","variables","parts","processPart","setOrderInfo","setOrderLoading","user","partBatchInfo","then","finally","Provider","QuotationBasket","setSubtotal","quotationOrderOpen","setQuotationOrderOpen","reduce","sum","uploadIcon","loadingGrid","basketGrid","bottom","marginLeft","marginRight","materialsQuery","Quotation","setItems","setMaterials","getMaterials","changePartConfig","newItems","log","filter","_","i","Container","loginQuery","registerUserQuery","warn","phone_number","addresses","hasLocalStorage","setUserCredentials","jwt","localStorage","setItem","setUserName","setUserEmail","setUserJwt","saveUserAddresses","userEmail","DBName","DBVersion","Promise","resolve","reject","request","indexedDB","onerror","onsuccess","result","onupgradeneeded","userStore","createObjectStore","keyPath","createIndex","unique","idb","db","store","transaction","objectStore","forEach","ad","putRequest","put","catch","err","App","setUser","setUserLoading","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","handleCloseSnackbar","parse","login","userRegister","phoneNumber","registerUser","path","QuotationView","render","to","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","Boolean","location","hostname","match","platformTheme","createMuiTheme","palette","primary","main","dark","contrastText","secondary","ReactDOM","ThemeProvider","theme","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bf74000.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst style = {\n\tappBar: {\n\t\tbackgroundColor: 'transparent',\n\t\tcolor: 'rgba(69, 90, 100, 0.8)',\n\t\tmarginBottom: '1rem',\n\t},\n};\n\nfunction AppBarComponent() {\n\treturn (\n\t\t<AppBar elevation={0} position=\"static\" style={style.appBar}>\n\t\t\t<Toolbar>\n\t\t\t\t<Typography variant=\"h6\">Mech4u</Typography>\n\t\t\t</Toolbar>\n\t\t</AppBar>\n\t);\n}\n\nexport default AppBarComponent;\n","import {createContext} from 'react';\n\nexport default createContext();\n","export async function uploadFile(file) {\n\tconst formData = new FormData();\n\n\tformData.append('file', file);\n\n\ttry {\n\t\tconst response = await fetch('/api/file/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\treturn {\n\t\t\t\tdata: null,\n\t\t\t\terror: {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tmessage: 'Não foi possível fazer upload do arquivo',\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst data = await response.json();\n\n\t\treturn {\n\t\t\tdata,\n\t\t\terror: null,\n\t\t};\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Não foi possível fazer upload do arquivo',\n\t\t\t}\n\t\t};\n\t}\n}\n","import React, { useContext, useRef } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { uploadFile } from '../../libs/fetch/upload';\nimport './QuotationUpload.scss';\n\n\nfunction QuotationUpload() {\n\tconst inputEl = useRef(null);\n\tconst {\n\t\titemsLoading,\n\t\tsetItemsLoading,\n\t\taddItem,\n\t} = useContext(QuotationContext);\n\n\tasync function handleChange(event) {\n\t\tsetItemsLoading(true);\n\n\t\ttry {\n\t\t\tconst {data} = await uploadFile(event.target.files[0]);\n\n\t\t\taddItem({\n\t\t\t\t...data.part,\n\t\t\t});\n\t\t} catch (err) {\n\t\t} finally {\n\t\t\tsetItemsLoading(false);\n\t\t}\n\t}\n\n\tfunction openFileInput() {\n\t\tinputEl.current.click();\n\t}\n\n\treturn (\n\t\t<Box\n\t\t\tcomponent=\"div\"\n\t\t\tid=\"quotation-upload-wrapper\"\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"file\"\n\t\t\t\tname=\"file\"\n\t\t\t\tid=\"quotation-upload-input\"\n\t\t\t\tref={inputEl}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tfullWidth\n\t\t\t\tonClick={openFileInput}\n\t\t\t\tdisabled={itemsLoading}\n\t\t\t>\n\t\t\t\tAdicionar Arquivo\n\t\t\t</Button>\n\t\t</Box>\n\t);\n}\n\nexport default QuotationUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction Materials({classes, materialType, setMaterialType}) {\n\tconst {materials} = React.useContext(QuotationContext);\n\n\tfunction handleMaterialTypeClick(newMaterialType) {\n\t\treturn function (event) {\n\t\t\tsetMaterialType(newMaterialType);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tMateriais\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t{materials.map(mat => (\n\t\t\t\t<React.Fragment key={'quotation-item-edit_material-' + mat.id}>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container spacing={0}>\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Typography color=\"primary\" variant=\"subtitle2\">\n\t\t\t\t\t\t\t\t\t{mat.name}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t{mat.material_types.map(matType => (\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\txs={6}\n\t\t\t\t\t\t\t\t\tsm={4}\n\t\t\t\t\t\t\t\t\tmd={3}\n\t\t\t\t\t\t\t\t\tkey={'quotation-item-edit_material-type-' + matType.id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName={classes.materialTypeButton}\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={handleMaterialTypeClick({...matType})}\n\t\t\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\t\t\tmatType.id === materialType.id ?\n\t\t\t\t\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{matType.name}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Divider light />\n\t\t\t\t\t</Grid>\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tmaterialTypeButton: {\n\t\theight: '100%',\n\t\twidth: '100%',\n\t\tfontSize: '0.75rem',\n\t},\n};\n\nMaterials.propTypes = {\n\tclasses: PropTypes.object,\n\tmaterialType: PropTypes.object.isRequired,\n\tsetMaterialType: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Materials);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction Treatments(props) {\n\tconst [heatTreatments, setHeatTreatments] = React.useState([]);\n\tconst [superficialTreatments, setSuperficialTreatments] = React.useState([]);\n\tconst {materials} = React.useContext(QuotationContext);\n\tconst {\n\t\tclasses,\n\t\tmaterialTypeId,\n\t\theatTreatment,\n\t\tsetHeatTreatment,\n\t\tsuperficialTreatment,\n\t\tsetSuperficialTreatment,\n\t} = props;\n\n\tReact.useEffect(() => {\n\t\tsetHeatTreatments(materialHeatTreatments(materials, materialTypeId));\n\t\tsetSuperficialTreatments(materialSuperficialTreatments(materials, materialTypeId));\n\t}, [materialTypeId, materials]);\n\t\n\tfunction handleHeatTreatmentClick(newHeatTreatment) {\n\t\treturn function (e) {\n\t\t\tsetHeatTreatment(newHeatTreatment);\n\t\t}\n\t}\n\n\tfunction handleSuperficialTreatmentClick(newSuperficialTreatment) {\n\t\treturn function (e) {\n\t\t\tsetSuperficialTreatment(newSuperficialTreatment);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\tTratamentos\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography color=\"primary\" variant=\"subtitle2\">\n\t\t\t\t\t\t\tTérmicos\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.treatmentButton}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={handleHeatTreatmentClick(null)}\n\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\theatTreatment === null ?\n\t\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNenhum\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{heatTreatments.map(hT => (\n\t\t\t\t\t\t<Grid item xs={3} key={hT.id}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.treatmentButton}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={handleHeatTreatmentClick({...hT})}\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\theatTreatment !== null && hT.id === heatTreatment.id ?\n\t\t\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{hT.name}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider light />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography color=\"primary\" variant=\"subtitle2\">\n\t\t\t\t\t\t\tSuperficiais\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName={classes.treatmentButton}\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tonClick={handleSuperficialTreatmentClick(null)}\n\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\tsuperficialTreatment === null ?\n\t\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNenhum\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{superficialTreatments.map(sT => (\n\t\t\t\t\t\t<Grid item xs={3} key={sT.id}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={classes.treatmentButton}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tonClick={handleSuperficialTreatmentClick({...sT})}\n\t\t\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\t\t\tsuperficialTreatment !== null && sT.id === superficialTreatment.id ?\n\t\t\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{sT.name}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction materialHeatTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.heat_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction materialSuperficialTreatments(materials, materialTypeId) {\n\tfor (const material of materials) {\n\t\tfor (const type of material.material_types) {\n\t\t\tif (type.id === materialTypeId) {\n\t\t\t\treturn [...type.superficial_treatments];\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst styles = {\n\ttreatmentButton: {\n\t\theight: '100%',\n\t\twidth: '100%',\n\t\tfontSize: '0.75rem',\n\t},\n};\n\nTreatments.propTypes = {\n\tclasses: PropTypes.object,\n\tmaterialTypeId: PropTypes.string.isRequired,\n\theatTreatment: PropTypes.object,\n\tsetHeatTreatment: PropTypes.func.isRequired,\n\tsuperficialTreatment: PropTypes.object,\n\tsetSuperficialTreatment: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Treatments);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Materials from './Materials';\nimport Treatments from './Treatments';\n\nfunction FirstTabPanel(props) {\n\tconst {\n\t\tmaterialType,\n\t\tsetMaterialType,\n\t\theatTreatment,\n\t\tsetHeatTreatment,\n\t\tsuperficialTreatment,\n\t\tsetSuperficialTreatment,\n\t} = props;\n\n\treturn (\n\t\t<Grid container spacing={0}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Materials\n\t\t\t\t\tmaterialType={materialType}\n\t\t\t\t\tsetMaterialType={setMaterialType}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Treatments\n\t\t\t\t\theatTreatment={heatTreatment}\n\t\t\t\t\tsetHeatTreatment={setHeatTreatment}\n\t\t\t\t\tsuperficialTreatment={superficialTreatment}\n\t\t\t\t\tsetSuperficialTreatment={setSuperficialTreatment}\n\t\t\t\t\tmaterialTypeId={materialType.id}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nFirstTabPanel.propTypes = {\n\tmaterialType: PropTypes.object.isRequired,\n\tsetMaterialType: PropTypes.func.isRequired,\n\theatTreatment: PropTypes.object,\n\tsetHeatTreatment: PropTypes.func.isRequired,\n\tsuperficialTreatment: PropTypes.object,\n\tsetSuperficialTreatment: PropTypes.func.isRequired,\n};\n\nexport default FirstTabPanel;\n","/**\n * The \"Finishing\" config of the part comes as a ENUM\n * It is necessary to translate/format it so the user\n * can read the value\n *\n * Possible values for finishing:\n * - STANDARD -> Padrão - 3.2 Ra\n * - RECTIFIED -> Retificado - 1.6 Ra\n * - POLISHED -> Polido - 0.8 Ra\n * @param {string} raw\tFinishing enum\n * @return {string}\t\tFinishing translated/formatted\n */\nexport function renderFinishing(raw) {\n\tswitch (raw) {\n\t\tcase 'RECTIFIED':\n\t\t\treturn 'Retificado - 1.6 Ra';\n\t\tcase 'POLISHED':\n\t\t\treturn 'Polido - 0.8 Ra';\n\t\tdefault:\n\t\t\treturn 'Padrão - 3.2 Ra';\n\t};\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/styles';\nimport { renderFinishing } from '../../libs/format/finishing';\n\nconst possibleFinishings = [\n\t'STANDARD',\n\t'RECTIFIED',\n\t'POLISHED',\n];\n\nfunction Finishing({classes, finishing, setFinishing}) {\n\tfunction handleFinishingClick(newFinishing) {\n\t\treturn function (e) {\n\t\t\tsetFinishing(newFinishing);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\tAcabamento\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t{possibleFinishings.map(f => (\n\t\t\t\t<Grid item xs={12} sm={4} md={3} key={'possible-finishings-' + f}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.finishingButton}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleFinishingClick(f)}\n\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\tf === finishing || (!finishing && f === 'STANDARD') ?\n\t\t\t\t\t\t\t\"outlined\"\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\"text\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderFinishing(f)}\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tfinishingButton: {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tfontSize: '0.75rem',\n\t}\n};\n\nFinishing.propTypes = {\n\tclasses: PropTypes.object,\n\tfinishing: PropTypes.string,\n\tsetFinishing: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Finishing);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nfunction Tolerance({tolerance, setTolerance}) {\n\tfunction handleToleranceChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (/^\\d*$/.test(newValue)) {\n\t\t\tsetTolerance(newValue);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tMenor Tolerância\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} className=\"quotation-item-edit__tolerance-finishing-grid\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\tstartAdornment: <InputAdornment position=\"start\">0.</InputAdornment>,\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">mm</InputAdornment>\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonChange={handleToleranceChange}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={tolerance !== null ? tolerance : ''}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nTolerance.propTypes = {\n\ttolerance: PropTypes.string,\n\tsetTolerance: PropTypes.func.isRequired,\n};\n\nexport default Tolerance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nfunction Screw({screwAmount, setScrewAmount}) {\n\tfunction handleScrewAmountChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (/^\\d*$/.test(newValue)) {\n\t\t\tif (!isNaN(newValue) && newValue !== '') {\n\t\t\t\tnewValue = parseInt(newValue, 10);\n\t\t\t}\n\n\t\t\tsetScrewAmount(newValue);\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t\t\tRoscas\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12} className=\"quotation-item-edit__tolerance-finishing-grid\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tonChange={handleScrewAmountChange}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={screwAmount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nScrew.propTypes = {\n\tscrewAmount: PropTypes.number.isRequired,\n\tsetScrewAmount: PropTypes.func.isRequired,\n};\n\nexport default Screw;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport Finishing from './Finishing';\nimport Tolerance from './Tolerance';\nimport Screw from './Screw';\n\nfunction SecondTabPanel(props) {\n\tconst {\n\t\tclasses,\n\t\tfinishing,\n\t\tsetFinishing,\n\t\ttolerance,\n\t\tsetTolerance,\n\t\tscrewAmount,\n\t\tsetScrewAmount,\n\t} = props;\n\t\n\treturn (\n\t\t<Grid container spacing={0}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Finishing\n\t\t\t\t\tfinishing={finishing}\n\t\t\t\t\tsetFinishing={setFinishing}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider light className={classes.divider} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Tolerance\n\t\t\t\t\ttolerance={tolerance}\n\t\t\t\t\tsetTolerance={setTolerance}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider light className={classes.divider} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Screw\n\t\t\t\t\tscrewAmount={screwAmount}\n\t\t\t\t\tsetScrewAmount={setScrewAmount}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tdivider: {\n\t\tmarginTop: '1rem',\n\t},\n};\n\nSecondTabPanel.propTypes = {\n\tclasses: PropTypes.object,\n\tfinishing: PropTypes.string,\n\tsetFinishing: PropTypes.func.isRequired,\n\ttolerance: PropTypes.string,\n\tsetTolerance: PropTypes.func.isRequired,\n\tscrewAmount: PropTypes.number,\n\tsetScrewAmount: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SecondTabPanel);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/styles';\nimport FirstTabPanel from './FirstTabPanel';\nimport SecondTabPanel from './SecondTabPanel';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemEdit.scss';\n\n\nfunction QuotationItemEdit({classes, item, open, onCancel}) {\n\tconst [tabValue, setTabValue] = React.useState(0);\n\tconst [materialType, setMaterialType] = React.useState(item.material_type);\n\tconst [heatTreatment, setHeatTreatment] = React.useState(item.heat_treatment);\n\tconst [superficialTreatment, setSuperficialTreatment] = React.useState(item.superficial_treatment);\n\tconst [tolerance, setTolerance] = React.useState(item.tolerance);\n\tconst [finishing, setFinishing] = React.useState(item.finishing);\n\tconst [screwAmount, setScrewAmount] = React.useState(item.screw_amount);\n\tconst {savePartConfigChanges} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tconst {\n\t\t\tmaterial_type,\n\t\t\theat_treatment,\n\t\t\tsuperficial_treatment,\n\t\t} = item;\n\n\t\tif (materialType.id === material_type.id) {\n\t\t\tsetHeatTreatment(heat_treatment);\n\t\t\tsetSuperficialTreatment(superficial_treatment);\n\t\t} else {\n\t\t\tsetHeatTreatment(null);\n\t\t\tsetSuperficialTreatment(null);\n\t\t}\n\t}, [item, materialType]);\n\n\tfunction handleChangeTab(event, newValue) {\n\t\tsetTabValue(newValue);\n\t}\n\n\tfunction handleSaveConfig() {\n\t\tfunction processTolerance(raw) {\n\t\t\tif (!raw) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn parseFloat('0.' + raw);\n\t\t}\n\n\t\tsavePartConfigChanges({\n\t\t\tpart_id: item.id,\n\t\t\tmaterial_type_id: materialType.id,\n\t\t\theat_treatment_id: heatTreatment ? heatTreatment.id : null,\n\t\t\tsuperficial_treatment_id: superficialTreatment ? superficialTreatment.id : null,\n\t\t\ttolerance: processTolerance(tolerance),\n\t\t\tfinishing,\n\t\t\tscrew_amount: screwAmount,\n\t\t\tamount: item.amount,\n\t\t});\n\t\tonCancel();\n\t}\n\n\tconst fullScreen = useMediaQuery('(max-width:600px)');\n\n\tconst hasChanged = item.material_type.id !== materialType.id ||\n\t\tJSON.stringify(heatTreatment) !== JSON.stringify(item.heat_treatment) ||\n\t\tJSON.stringify(superficialTreatment) !== JSON.stringify(item.superficial_treatment) ||\n\t\ttolerance !== item.tolerance ||\n\t\tfinishing !== item.finishing ||\n\t\tscrewAmount !== item.screw_amount;\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick={true}\n\t\t\tdisableEscapeKeyDown={true}\n\t\t\tfullWidth\n\t\t\tfullScreen={fullScreen}\n\t\t\tmaxWidth=\"lg\"\n\t\t\topen={open}\n\t\t\tscroll=\"body\"\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableTypography={true}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</Typography>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent className={classes.dialogContent}>\n\t\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={tabValue}\n\t\t\t\t\t\tonChange={handleChangeTab}\n\t\t\t\t\t\tindicatorColor=\"primary\"\n\t\t\t\t\t\ttextColor=\"primary\"\n\t\t\t\t\t\tvariant=\"fullWidth\"\n\t\t\t\t\t\tscrollButtons=\"auto\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Material e Tratamentos\"\n\t\t\t\t\t\t\tid=\"edit-tab-material&treatments\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Acabamento, Tolerância e Roscas\"\n\t\t\t\t\t\t\tid=\"edit-tab-finishing&tolerance&screw\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tabs>\n\t\t\t\t</AppBar>\n\t\t\t\t<div className=\"quotation-item-edit__panels\">\n\t\t\t\t\t{\n\t\t\t\t\t\ttabValue === 0 &&\n\t\t\t\t\t\t<FirstTabPanel\n\t\t\t\t\t\t\tmaterialType={materialType}\n\t\t\t\t\t\t\tsetMaterialType={setMaterialType}\n\t\t\t\t\t\t\theatTreatment={heatTreatment}\n\t\t\t\t\t\t\tsetHeatTreatment={setHeatTreatment}\n\t\t\t\t\t\t\tsuperficialTreatment={superficialTreatment}\n\t\t\t\t\t\t\tsetSuperficialTreatment={setSuperficialTreatment}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\ttabValue === 1 &&\n\t\t\t\t\t\t<SecondTabPanel\n\t\t\t\t\t\t\tfinishing={finishing}\n\t\t\t\t\t\t\tsetFinishing={setFinishing}\n\t\t\t\t\t\t\ttolerance={tolerance}\n\t\t\t\t\t\t\tsetTolerance={setTolerance}\n\t\t\t\t\t\t\tscrewAmount={screwAmount}\n\t\t\t\t\t\t\tsetScrewAmount={setScrewAmount}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={!hasChanged}\n\t\t\t\t\tonClick={handleSaveConfig}\n\t\t\t\t>\n\t\t\t\t\tSalvar\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst styles = {\n\tdialogContent: {\n\t\tpaddingTop: 0,\n\t\tpaddingLeft: 0,\n\t\tpaddingRight: 0,\n\t\tminHeight: '30rem',\n\t\tmaxHeight: '30rem',\n\t},\n\tappBar: {\n\t\tbackgroundColor: '#fff',\n\t},\n\tpanels: {\n\t\tpaddingTop: '1rem',\n\t\tpaddingLeft: '0.5rem',\n\t\tpaddingRight: '0.5rem',\n\t},\n};\n\nQuotationItemEdit.propTypes = {\n\tclasses: PropTypes.object,\n\titem: PropTypes.object.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuotationItemEdit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport QuotationItemEdit from '../QuotationItemEdit';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction HeaderComponent({index, item}) {\n\tconst [editDialogOpen, setEditDialogOpen] = React.useState(false);\n\tconst {\n\t\titemsLoading,\n\t\tremoveItem,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleOpenEdit() {\n\t\tsetEditDialogOpen(true);\n\t}\n\n\tfunction handleCloseEdit() {\n\t\tsetEditDialogOpen(false);\n\t}\n\n\tfunction handleRemoveItem() {\n\t\tif (window.confirm('Remover peça?')) {\n\t\t\tremoveItem(index);\n\t\t}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tclassName=\"quotation-item-header\"\n\t\t\t>\n\t\t\t\t<Grid item className=\"quotation-item-header__part-name\">\n\t\t\t\t\t{item.name}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className=\"quotation-item-value\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleOpenEdit}\n\t\t\t\t\t\ttitle=\"Editar peça\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={handleRemoveItem}\n\t\t\t\t\t\ttitle=\"Remover peça\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<QuotationItemEdit\n\t\t\t\titem={item}\n\t\t\t\topen={editDialogOpen}\n\t\t\t\tonCancel={handleCloseEdit}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nHeaderComponent.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default HeaderComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles} from '@material-ui/core/styles';\n\nfunction BaseConfigComponent({classes, label, value}) {\n\tlet valueToRender = value;\n\n\tif (!value && value !== 0) {\n\t\tvalueToRender = 'Não informado';\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tdirection=\"column\"\n\t\t\tjustify=\"center\"\n\t\t\talignItems=\"center\"\n\t\t\tclassName={classes.container}\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t\tclassName={classes.containerLabel}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\txs={12}\n\t\t\t>\n\t\t\t\t{valueToRender}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nconst styles = {\n\tcontainer: {\n\t\tcolor: 'rgba(69, 90, 100, 0.7)',\n\t\tfontSize: '0.8rem',\n\t},\n\tcontainerLabel: {\n\t\tfontWeight: 'bold',\n\t},\n};\n\n\nBaseConfigComponent.propTypes = {\n\tclasses: PropTypes.object,\n\tlabel: PropTypes.string.isRequired,\n\tvalue: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.number,\n\t]),\n};\n\nexport default withStyles(styles)(BaseConfigComponent);\n","/**\n * Almost all numbers are going to be multiplied by 100\n * This function corrects it to render to the user\n * @param {number} raw\tNumber multiplied by 100\n * @return {number}\t\tCorrect number to render\n */\nexport function renderNumber(raw) {\n\treturn (parseInt(raw, 10)/100).toFixed(2);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { renderNumber } from '../../libs/format/number';\n\nfunction FooterComponent({item}) {\n\tconst {\n\t\tamount,\n\t\tunit_price,\n\t} = item;\n\n\tconst [amountToRender, setAmountToRender] = React.useState(amount);\n\tconst {\n\t\titemsLoading,\n\t\tsavePartConfigChanges,\n\t} = React.useContext(QuotationContext);\n\n\tfunction handleChange(event) {\n\t\tlet newValue = event.target.value;\n\n\t\tif (/^\\d*$/.test(newValue)) {\n\t\t\tif (!isNaN(newValue) && newValue !== '') {\n\t\t\t\tnewValue = parseInt(newValue, 10);\n\t\t\t}\n\n\t\t\tsetAmountToRender(newValue);\n\t\t}\n\t}\n\n\tfunction handleCommitAmountChange() {\n\t\tif (amountToRender !== '' && amountToRender !== amount) {\n\t\t\tsavePartConfigChanges({\n\t\t\t\tpart_id: item.id,\n\t\t\t\tmaterial_type_id: item.material_type.id,\n\t\t\t\theat_treatment_id: item.heat_treatment ? item.heat_treatment.id : null,\n\t\t\t\tsuperficial_treatment_id: item.superficial_treatment ? item.superficial_treatment.id : null,\n\t\t\t\ttolerance: item.tolerance,\n\t\t\t\tfinishing: item.finishing,\n\t\t\t\tscrew_amount: item.screw_amount,\n\t\t\t\tamount: amountToRender,\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction handleOnKeyPress(event) {\n\t\tif (event.key === 'Enter') {\n\t\t\thandleCommitAmountChange();\n\t\t}\n\t}\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tdirection=\"row\"\n\t\t\tjustify=\"space-between\"\n\t\t\talignItems=\"center\"\n\t\t\tclassName=\"quotation-item-footer\"\n\t\t>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tclassName=\"quotation-item-footer__amount\"\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName=\"quotation-item-footer__amount-label\"\n\t\t\t\t>\n\t\t\t\t\tQuantidade\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"quotation-item-footer__amount-value\"\n\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\tonBlur={handleCommitAmountChange}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonKeyPress={handleOnKeyPress}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvalue={amountToRender}\n\t\t\t\t/>\t\n\t\t\t</Grid>\n\t\t\t<Grid\n\t\t\t\titem\n\t\t\t\tclassName=\"quotation-item-footer__unit-price\"\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\titemsLoading ?\n\t\t\t\t\t<CircularProgress color=\"primary\" size={20} />\n\t\t\t\t\t:\n\t\t\t\t\t`R$ ${renderNumber(unit_price)}/unidade`\n\t\t\t\t}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nFooterComponent.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default FooterComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport HeaderComponent from './HeaderComponent';\nimport BaseConfigComponent from '../BaseConfig';\nimport FooterComponent from './FooterComponent';\nimport { renderFinishing } from '../../libs/format/finishing';\nimport './QuotationItem.scss';\n\nfunction QuotationItem({index, item}) {\n\tconst {\n\t\tmaterial_type,\n\t\theat_treatment,\n\t\tsuperficial_treatment,\n\t\ttolerance,\n\t\tfinishing,\n\t\tscrew_amount,\n\t} = item;\n\n\treturn (\n\t\t<div className=\"quotation-item\">\n\t\t\t<HeaderComponent\n\t\t\t\tindex={index}\n\t\t\t\titem={item}\n\t\t\t/>\n\t\t\t<Divider light />\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tdirection=\"row\"\n\t\t\t\tjustify=\"space-around\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tspacing={2}\n\t\t\t\tclassName=\"quotation-item-config\"\n\t\t\t>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\t\tvalue={material_type.name}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Tratamento térmico\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\theat_treatment ? heat_treatment.name : null\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Tratamento superficial\"\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\tsuperficial_treatment ? superficial_treatment.name : null\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Tolerância\"\n\t\t\t\t\t\tvalue={tolerance}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Acabamento\"\n\t\t\t\t\t\tvalue={renderFinishing(finishing)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} sm={4} md={2}>\n\t\t\t\t\t<BaseConfigComponent\n\t\t\t\t\t\tlabel=\"Número de roscas\"\n\t\t\t\t\t\tvalue={screw_amount}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Divider light />\n\t\t\t<FooterComponent\n\t\t\t\titem={item}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nQuotationItem.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default QuotationItem;\n","import {createContext} from 'react';\n\nexport default createContext();\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport AppContext from '../../contexts/AppContext';\nimport './UserLogin.scss';\n\nfunction UserLogin() {\n\tconst [form, setForm] = React.useState({\n\t\temail: '',\n\t\tpassword: '',\n\t});\n\tconst [isEmailValid, setIsEmailValid] = React.useState(true);\n\tconst {\n\t\tuserLoading,\n\t\tuserLogin,\n\t\thandleOpenSnackbar,\n\t} = React.useContext(AppContext);\n\n\tReact.useEffect(() => {\n\t\tif (form.email !== '') {\n\t\t\tsetIsEmailValid(/^.+@.+\\..+(\\..+)*$/.test(form.email));\n\t\t}\n\t}, [form.email]);\n\n\tfunction handleFormChange(event) {\n\t\tsetForm({\n\t\t\t...form,\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t}\n\n\tfunction handleFormSubmit(event) {\n\t\tevent.preventDefault();\n\t\tif (!isEmailValid || !form.email) {\n\t\t\thandleOpenSnackbar('E-mail inválido');\n\t\t} else if (!form.password) {\n\t\t\thandleOpenSnackbar('Por favor inserir uma senha');\n\t\t} else {\n\t\t\tuserLogin(form.email, form.password);\n\t\t}\n\t}\n\n\treturn (\n\t\t<form\n\t\t\tnoValidate\n\t\t\tautoComplete=\"off\"\n\t\t\tonSubmit={handleFormSubmit}\n\t\t>\n\t\t\t<Grid container spacing={1}>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\terror={!isEmailValid}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tlabel=\"E-mail\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleFormChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tvalue={form.email}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tlabel=\"Senha\"\n\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleFormChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={form.password}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t{\n\t\t\t\t\t\tuserLoading\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<CircularProgress color=\"primary\" />\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvalue=\"Log In\"\n\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n}\n\nexport default UserLogin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { renderNumber } from '../../libs/format/number';\nimport { renderFinishing } from '../../libs/format/finishing';\n\nfunction ItemSummary({item}) {\n\tconst {\n\t\tmaterial_type,\n\t\theat_treatment,\n\t\tsuperficial_treatment,\n\t\ttolerance,\n\t\tfinishing,\n\t\tscrew_amount,\n\t\tunit_price,\n\t\tamount,\n\t} = item;\n\n\treturn (\n\t\t<Grid\n\t\t\tcontainer\n\t\t\tspacing={1}\n\t\t\tclassName=\"quotation-order__config-list\"\n\t\t>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tjustify=\"space-between\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t>\n\t\t\t\t\t<Grid item className=\"quotation-order__item-name\">\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className=\"quotation-order__item-whole-price\">\n\t\t\t\t\t\t{`R$ ${renderNumber(amount * unit_price)}`}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Material\"\n\t\t\t\t\tvalue={material_type.name}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Tratamento térmico\"\n\t\t\t\t\tvalue={heat_treatment ? heat_treatment.name : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Tratamento superficial\"\n\t\t\t\t\tvalue={superficial_treatment ? superficial_treatment.name : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Mínima tolerância\"\n\t\t\t\t\tvalue={tolerance ? tolerance : null}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Acabamento\"\n\t\t\t\t\tvalue={renderFinishing(finishing)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Roscas\"\n\t\t\t\t\tvalue={screw_amount}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Quantidade\"\n\t\t\t\t\tvalue={amount}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}><Divider light /></Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<RenderConfig\n\t\t\t\t\tlabel=\"Preço por unidade\"\n\t\t\t\t\tvalue={`R$ ${renderNumber(unit_price)}`}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction RenderConfig({label, value}) {\n\treturn (\n\t\t<Grid container spacing={1} className=\"quotation-order-config\">\n\t\t\t<Grid item className=\"quotation-order-config__label\">{`${label}:`}</Grid>\n\t\t\t<Grid item className=\"quotation-order-config__value\">{value || '—'}</Grid>\n\t\t</Grid>\n\t);\n}\n\nItemSummary.propTypes = {\n\titem: PropTypes.object.isRequired,\n};\n\nexport default ItemSummary;\n","import {createContext} from 'react';\n\nexport default createContext();\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { renderDeliveryOption } from '../../libs/format/delivery';\n\nconst deliveryOptions = [\n\t'WORKINGDAYS_15',\n\t'WORKINGDAYS_10',\n];\n\nfunction Delivery() {\n\tconst {\n\t\tdeliveryOption,\n\t\tsetDeliveryOption,\n\t\torderInfo,\n\t\torderLoading,\n\t} = React.useContext(QuotationOrderContext);\n\n\tfunction handleDeliveryOptionChange(newOption) {\n\t\treturn function (event) {\n\t\t\tsetDeliveryOption(newOption);\n\t\t};\n\t}\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle2\">\n\t\t\t\t\tOpções de data de entrega\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t{deliveryOptions.map(option => (\n\t\t\t\t<Grid item xs={3} key={option}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={orderLoading}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tonClick={handleDeliveryOptionChange(option)}\n\t\t\t\t\t\tvariant={\n\t\t\t\t\t\t\toption === deliveryOption ?\n\t\t\t\t\t\t\t'outlined'\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t'text'\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderDeliveryOption(option)}\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t))}\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\tData da entrega:\n\t\t\t\t\t{\n\t\t\t\t\t\torderInfo && orderInfo.delivery &&\n\t\t\t\t\t\t\t(new Date(orderInfo.delivery.at)).toLocaleDateString('pt-BR')\n\t\t\t\t\t}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default Delivery;\n","export function renderDeliveryOption(raw) {\n\tconst days = raw.split('_')[1];\n\n\treturn `${days} dias úteis`;\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { renderNumber } from '../../libs/format/number';\n\nfunction PriceInfo() {\n\tconst {\n\t\torderInfo,\n\t\t//orderLoading,\n\t} = React.useContext(QuotationOrderContext);\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t\t\t`Sub total das peças: R$ ${renderNumber(orderInfo.subtotal)}`\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography color=\"primary\" variant=\"subtitle1\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t\t\t`Custo de entrega: R$ ${renderNumber(orderInfo.delivery.price)}`\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Typography color=\"primary\" variant=\"h6\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\torderInfo ?\n\t\t\t\t\t\t\t\t`Total: R$ ${renderNumber(orderInfo.subtotal + orderInfo.delivery.price)}`\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default PriceInfo;\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Delivery from './Delivery';\nimport PriceInfo from './PriceInfo';\n\nfunction ItemsOrderInfo() {\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Delivery />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Divider />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<PriceInfo />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default ItemsOrderInfo;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport ItemSummary from './ItemSummary';\nimport ItemsOrderInfo from './ItemsOrderInfo';\nimport QuotationContext from '../../contexts/QuotationContext';\n\nfunction ItemsList(props) {\n\tconst {items} = React.useContext(QuotationContext);\n\n\treturn (\n\t\t<Grid container spacing={1}>\n\t\t\t{items.map(item => (\n\t\t\t\t<React.Fragment key={item.id}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ItemSummary\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<Divider />\n\t\t\t\t\t</Grid>\n\t\t\t\t</React.Fragment>\n\t\t\t))}\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<ItemsOrderInfo />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default ItemsList;\n","export class FetchError extends Error {\n\tconstructor(message, status) {\n\t\tsuper(message);\n\t\tthis.status = status;\n\t}\n}\n\nexport function processFetchError(err) {\n\tif (err instanceof FetchError) {\n\t\tconsole.error(err.status, err.message);\n\t} else if (err instanceof Error) {\n\t\tconsole.error(err.message);\n\t} else {\n\t\tconsole.error(err);\n\t}\n}\n","import { FetchError } from '../errors';\n\nexport async function handleGraphQLResponse(res, dataKey) {\n\ttry {\n\t\tconst {ok} = res;\n\n\t\tconst {data, errors} = await res.json();\n\n\t\tif (!ok) {\n\t\t\tif (!errors || errors.length === 0) {\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\n\t\t\tconst {extensions} = errors[0]\n\n\t\t\tif (extensions && extensions.message && extensions.status) {\n\t\t\t\tthrow new FetchError(extensions.message, extensions.status);\n\t\t\t} else {\n\t\t\t\tconsole.error('Error message:', errors[0].message);\n\t\t\t\tthrow new FetchError('Houve um erro', 500);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tdata: data[dataKey],\n\t\t\terror: null,\n\t\t};\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: err.status,\n\t\t\t\tmessage: err.message,\n\t\t\t},\n\t\t};\n\t}\n}\n","import { handleGraphQLResponse } from './handler';\n\nconst changePartOptionsQuery = `\nmutation RootMutation($input: PartOptionsInputType!) {\n\tchangePartOptions(input: $input) {\n\t\tid\n\t\tname\n\t\tmaterial_type {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\theat_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\tsuperficial_treatment {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t\ttolerance\n\t\tfinishing\n\t\tscrew_amount\n\t\tamount\n\t\tunit_price\n\t}\n}\n`.trim();\n\nconst partBatchInfoQuery = `\nmutation RootMutation($input: PartBatchInfoInputType!) {\n\tpartBatchInfo(input: $input) {\n\t\tsubtotal\n\t\tdelivery {\n\t\t\tprice\n\t\t\tat\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Change Part options\n * @param {object} input\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {number} screw_amount\t\t\t\t\tPart's number of screws\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @return {object}\n *            {object} data\t\t\t\t\t\t\tGraphQL response data. It can be null\n *                {string} id\t\t\t\t\t\tPart's id (uuid)\n *                {string} name\t\t\t\t\t\tPart's name\n *                {object} material_type\t\t\tPart's material type\n *                    {string} name\t\t\t\t\tMaterial type's name\n *                    {string} id\t\t\t\t\tMaterial type's id\n *                {object} heat_treatment\t\t\tPart's heat treatment. It can be null\n *                    {string} name\t\t\t\t\tHeat Treatment's name\n *                    {string} id\t\t\t\t\tHeat treatment's id\n *                {object} superficial_treatment\tPart's superficial treatment. It can be null\n *                    {string} name\t\t\t\t\tSuperficial Treatment's name\n *                    {string} id\t\t\t\t\tSuperficial treatment's id\n *                {string} tolerance\t\t\t\tPart's tolerance. It can be null.\n *                {string} finishing\t\t\t\tPart's finishing. It can be null\n *                {number} screw_amount\t\t\t\tPart's number of screws\n *                {number} unit_price\t\t\t\tPart's unit price. It's multiplied by 100 (int)\n *            {object} error\t\t\t\t\t\tError object. It can be null\n *                {number} status\t\t\t\t\tHTTP status code\n *                {string} message\n */\nexport async function changePartConfig(input)  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: changePartOptionsQuery,\n\t\t\t\tvariables: { input },\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'changePartOptions');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n\n/**\n * Get batch info\n * @param {object[]} parts\t\t\t\t\t\t\tPart options object\n *            {string} part_id\t\t\t\t\t\tPart's id (uuid)\n *            {string} material_type_id\t\t\t\tPart's material type\n *            {string} heat_treatment_id\t\t\tPart's heat treatment. It can be null\n *            {string} superficial_treatment_id\t\tPart's superficial treatment. It can be null\n *            {string} tolerance\t\t\t\t\tPart's tolerance. It can be null.\n *            {string} finishing\t\t\t\t\tPart's finishing. It can be null\n *            {number} screw_amount\t\t\t\t\tPart's number of screws\n *            {number} amount\t\t\t\t\t\tHow many parts to be created\n * @param {string} delivery\t\t\t\t\t\t\tDelivery option\n * @return {object}\n *             {number} subtotal\t\t\t\t\tBatch subtotal\n *             {object} delivery\t\t\t\t\tDelivery info\n *                 {number} price\t\t\t\t\tDelivery price\n *                 {string} at\t\t\t\t\t\tEstimated delivery date\n */\nexport async function partBatchInfo(parts, delivery = 'WORKINGDAYS_15')  {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: partBatchInfoQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tparts,\n\t\t\t\t\t\tdelivery,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'partBatchInfo');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Typography from '@material-ui/core/Typography';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { withStyles } from '@material-ui/core/styles';\nimport UserLogin from '../UserLogin';\nimport ItemsList from './ItemsList';\nimport AppContext from '../../contexts/AppContext';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport QuotationOrderContext from '../../contexts/QuotationOrderContext';\nimport { partBatchInfo } from '../../libs/fetch/part';\nimport './QuotationOrder.scss';\n\nfunction processPart(part) {\n\treturn {\n\t\tpart_id: part.id,\n\t\tmaterial_type_id: part.material_type.id,\n\t\theat_treatment_id: part.heat_treatment ? part.heat_treatment.id : null,\n\t\tsuperficial_treatment_id: part.superficial_treatment ? part.superficial_treatment.id : null,\n\t\ttolerance: part.tolerance,\n\t\tfinishing: part.finishing,\n\t\tscrew_amount: part.screw_amount,\n\t\tamount: part.amount,\n\t};\n}\n\nfunction QuotationOrder({classes, open, onCancel}) {\n\tconst [deliveryOption, setDeliveryOption] = React.useState('WORKINGDAYS_15');\n\tconst [orderInfo, setOrderInfo] = React.useState(null);\n\tconst [orderLoading, setOrderLoading] = React.useState(true);\n\tconst {\n\t\tuser,\n\t\thandleOpenSnackbar,\n\t} = React.useContext(AppContext);\n\tconst {items} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tif (open) {\n\t\t\tsetOrderLoading(true);\n\n\t\t\tpartBatchInfo(\n\t\t\t\titems.map(processPart),\n\t\t\t\tdeliveryOption\n\t\t\t)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data) {\n\t\t\t\t\t\tsetOrderInfo(response.data);\n\t\t\t\t\t} else if (response.error) {\n\t\t\t\t\t\tif (response.error.status === 500) {\n\t\t\t\t\t\t\thandleOpenSnackbar('Houve um error');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleOpenSnackbar(response.error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsetOrderLoading(false);\n\t\t\t\t});\n\t\t}\n\t}, [open, handleOpenSnackbar, items, deliveryOption]);\n\n\tconst fullScreen = useMediaQuery('(max-width:600px)');\n\n\treturn (\n\t\t<Dialog\n\t\t\tdisableBackdropClick={true}\n\t\t\tdisableEscapeKeyDown={false}\n\t\t\tfullWidth\n\t\t\tfullScreen={fullScreen}\n\t\t\tmaxWidth=\"md\"\n\t\t\topen={open}\n\t\t\tscroll=\"body\"\n\t\t>\n\t\t\t<DialogTitle\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tdisableTypography={true}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" color=\"primary\">\n\t\t\t\t\t{user ? 'Fechar pedido' : 'Log In'}\n\t\t\t\t</Typography>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent className={classes.dialogContent}>\n\t\t\t\t{\n\t\t\t\t\tuser ?\n\t\t\t\t\t<QuotationOrderContext.Provider value={{\n\t\t\t\t\t\tdeliveryOption,\n\t\t\t\t\t\tsetDeliveryOption,\n\t\t\t\t\t\torderInfo,\n\t\t\t\t\t\torderLoading,\n\t\t\t\t\t\tsetOrderLoading,\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<ItemsList />\n\t\t\t\t\t</QuotationOrderContext.Provider>\n\t\t\t\t\t:\n\t\t\t\t\t<UserLogin />\n\t\t\t\t}\n\t\t\t</DialogContent>\n\t\t\t<DialogActions>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={onCancel}\n\t\t\t\t>\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n\t\t\t</DialogActions>\n\t\t</Dialog>\n\t);\n}\n\nconst styles = {\n\tdialogContent: {\n\t\tmaxHeight: '70vh',\n\t},\n};\n\nQuotationOrder.propTypes = {\n\tclasses: PropTypes.object,\n\topen: PropTypes.bool.isRequired,\n\tonCancel: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(QuotationOrder);\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport QuotationOrder from '../QuotationOrder';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { renderNumber } from '../../libs/format/number';\nimport './QuotationBasket.scss';\n\nfunction QuotationBasket({items}) {\n\tconst [subtotal, setSubtotal] = React.useState(0);\n\tconst [quotationOrderOpen, setQuotationOrderOpen] = React.useState(false);\n\tconst {itemsLoading} = React.useContext(QuotationContext);\n\n\tReact.useEffect(() => {\n\t\tsetSubtotal(items.reduce((sum, item) => (\n\t\t\tsum + ( item.unit_price * item.amount )\n\t\t), 0));\n\t}, [items]);\n\n\tfunction handleOpenQuotationOrder() {\n\t\tsetQuotationOrderOpen(true);\n\t}\n\n\tfunction handleCloseQuotationOrder() {\n\t\tsetQuotationOrderOpen(false);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid\n\t\t\t\tclassName=\"quotation-basket\"\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t\tjustify=\"space-between\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid\n\t\t\t\t\tclassName=\"quotation-basket__subtotal\"\n\t\t\t\t\titem\n\t\t\t\t>\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tcontainer\n\t\t\t\t\t\tspacing={1}\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tclassName=\"quotation-basket__subtotal-label\"\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSub total\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tclassName=\"quotation-basket__subtotal-value\"\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{`R$ ${renderNumber(subtotal)}`}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={itemsLoading}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={handleOpenQuotationOrder}\n\t\t\t\t\t>\n\t\t\t\t\t\tFazer pedido\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<QuotationOrder\n\t\t\t\topen={quotationOrderOpen}\n\t\t\t\tonCancel={handleCloseQuotationOrder}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\n\nQuotationBasket.propTypes = {\n\titems: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default QuotationBasket;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/styles';\nimport QuotationItem from '../QuotationItem';\nimport QuotationBasket from '../QuotationBasket';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport './QuotationItemList.scss';\n\nfunction QuotationItemList({classes}) {\n\tconst {\n\t\titems,\n\t\titemsLoading,\n\t} = React.useContext(QuotationContext);\n\n\tif ((!items || items.length === 0) && !itemsLoading) {\n\t\treturn (\n\t\t\t<div className=\"quotation-item-list__empty\">\n\t\t\t\t<CloudUploadIcon className={classes.uploadIcon} />\n\t\t\t\t<span>Faça upload do seu arquivo!</span>\n\t\t\t</div>\n\t\t);\n\t} else if ((!items || items.length === 0) && itemsLoading) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tclassName={classes.loadingGrid}\n\t\t\t\tcontainer\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<CircularProgress\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize={80}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={1}\n\t\t\t>\n\t\t\t\t{items.map((item, index) => (\n\t\t\t\t\t<Grid\n\t\t\t\t\t\tkey={'quotation-item-list__item-' + index}\n\t\t\t\t\t\titem\n\t\t\t\t\t\txs={12}\n\t\t\t\t\t>\n\t\t\t\t\t\t<QuotationItem\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t))}\n\t\t\t\t<Grid\n\t\t\t\t\tclassName={classes.basketGrid}\n\t\t\t\t\titem\n\t\t\t\t\txs={12}\n\t\t\t\t>\n\t\t\t\t\t<QuotationBasket\n\t\t\t\t\t\titems={items}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t);\n\t}\n}\n\nconst styles = {\n\tuploadIcon: {\n\t\tcolor: 'rgba(69, 90, 100, 0.1)',\n\t\tfontSize: '20rem',\n\t},\n\tloadingGrid: {\n\t\theight: '50vh',\n\t},\n\tbasketGrid: {\n\t\tposition: 'sticky',\n\t\tbottom: '-0.35rem',\n\t\tmarginBottom: '0.25rem',\n\t\tmarginLeft: '0.25rem',\n\t\tmarginRight: '0.25rem',\n\t},\n};\n\nQuotationItemList.propTypes = {\n\tclasses: PropTypes.object,\n};\n\nexport default withStyles(styles)(QuotationItemList);\n","import { handleGraphQLResponse } from './handler';\n\nconst materialsQuery = `\nquery RootQuery {\n\tmaterials {\n\t\tid\n\t\tname\n\t\tmaterial_types {\n\t\t\tid\n\t\t\tname\n\t\t\theat_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\tsuperficial_treatments {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t}\n\t}\n}\n`.trim();\n\nexport async function getMaterials() {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: materialsQuery,\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'materials');\n\t} catch (err) {\n\t\tconsole.error(err);\n\n\t\treturn {\n\t\t\tdata: null,\n\t\t\terror: {\n\t\t\t\tstatus: 500,\n\t\t\t\tmessage: 'Houve um error',\n\t\t\t},\n\t\t};\n\t}\n}\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport QuotationUpload from '../../components/QuotationUpload';\nimport QuotationItemList from '../../components/QuotationItemList';\nimport AppContext from '../../contexts/AppContext';\nimport QuotationContext from '../../contexts/QuotationContext';\nimport { getMaterials } from '../../libs/fetch/material';\nimport { changePartConfig } from '../../libs/fetch/part';\nimport './Quotation.scss';\n\nfunction Quotation() {\n\tconst [items, setItems] = React.useState([]);\n\tconst [itemsLoading, setItemsLoading] = React.useState(false);\n\tconst [materials, setMaterials] = React.useState([]);\n\tconst {handleOpenSnackbar} = React.useContext(AppContext);\n\n\tReact.useEffect(() => {\n\t\tgetMaterials().then(({data, error}) => {\n\t\t\tif (!error) {\n\t\t\t\tsetMaterials(data);\n\t\t\t}\n\t\t});\n\t}, []);\n\n\tfunction savePartConfigChanges(input) {\n\t\tsetItemsLoading(true);\n\n\t\tchangePartConfig(input)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (data) {\n\t\t\t\t\tconst newItems = items.map(item => {\n\t\t\t\t\t\tif (item.id === input.part_id) {\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t});\n\n\t\t\t\t\tsetItems(newItems);\n\n\t\t\t\t\thandleOpenSnackbar('Atualização com sucesso');\n\t\t\t\t} else if (error) {\n\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetItemsLoading(false);\n\t\t\t});\n\t}\n\n\tfunction addItem(item) {\n\t\tconsole.log('item', item);\n\t\tsetItems([...items, item]);\n\t}\n\n\tfunction removeItem(index) {\n\t\tconst newItems = items.filter((_, i) => i !== index);\n\n\t\tsetItems(newItems);\n\t}\n\n\treturn (\n\t\t<QuotationContext.Provider value={{\n\t\t\titems,\n\t\t\titemsLoading,\n\t\t\tsetItemsLoading,\n\t\t\tsavePartConfigChanges,\n\t\t\taddItem,\n\t\t\tremoveItem,\n\t\t\tmaterials,\n\t\t}}>\n\t\t\t<Container className=\"quotation-view__container\" maxWidth=\"lg\">\n\t\t\t\t<QuotationUpload />\n\t\t\t\t<QuotationItemList />\n\t\t\t</Container>\n\t\t</QuotationContext.Provider>\n\t);\n}\n\nexport default Quotation;\n","import { handleGraphQLResponse } from './handler';\n\nconst loginQuery = `\nmutation RootMutation($input: LoginInputType!) {\n\tlogin (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\nconst registerUserQuery = `\nmutation RootMutation($input: RegisterUserInputType!) {\n\tregisterUser (input: $input) {\n\t\tname\n\t\temail\n\t\tjwt\n\t\taddresses {\n\t\t\tid\n\t\t\tstate\n\t\t\tmunicipality\n\t\t\taddress\n\t\t\taddress_number\n\t\t\tcomplement\n\t\t\tpostcode\n\t\t}\n\t}\n}\n`.trim();\n\n/**\n * Log in function\n * @param {string} email\tUser email\n * @param {string} password\tUser password\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function login(email, password) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: loginQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: { email, password, },\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'login');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n\n/**\n * Register user function\n * @param {string} name\t\t\t\t\t\tUser name\n * @param {string} phone_number\t\t\t\tUser phone_numbe\n * @param {string} email\t\t\t\t\tUser email\n * @param {string} password\t\t\t\t\tUser password\n * @param {object[]} addresses\t\t\t\tUser addresses\n * @return {object}\tLog In payload\n *             {string} name\t\t\t\tUser's name\n *             {string} phone_number\t\tUser's phone number\n *             {string} email\t\t\t\tUser's email\n *             {string} jwt\t\t\t\t\tLog in token (jwt)\n *             {object[]} addresses\t\t\tUser's addresses\n *                 {string} id\t\t\t\tAddress' id\n *                 {string} state\t\t\tAddress' state\n *                 {string} municipality\tAddress' municipality\n *                 {string} address\t\t\tAddress\n *                 {string} adress_number\tAddress' number\n *                 {string} complement\t\tAddress' complement\n *                 {string} postcode\t\tAddress' postcode\n */\nexport async function registerUser(name, phone_number, email, password, addresses) {\n\ttry {\n\t\tconst res = await fetch('/api/graphql', {\n\t\t\tmethod: 'post',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tquery: registerUserQuery,\n\t\t\t\tvariables: {\n\t\t\t\t\tinput: {\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tphone_number,\n\t\t\t\t\t\temail,\n\t\t\t\t\t\tpassword,\n\t\t\t\t\t\taddresses\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t\t});\n\n\t\treturn await handleGraphQLResponse(res, 'registerUser');\n\t} catch (err) {\n\t\tconsole.warn(err);\n\n\t\tthrow err;\n\t}\n}\n","function hasLocalStorage() {\n\treturn 'localStorage' in window;\n}\n\nfunction getUserJwt() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userJwt');\n}\n\nfunction getUserName() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userName');\n}\n\nfunction getUserEmail() {\n\tif (!hasLocalStorage()) {\n\t\treturn null;\n\t}\n\n\treturn window.localStorage.getItem('userEmail');\n}\n\nexport function getUserCredentials() {\n\treturn {\n\t\tname: getUserName(),\n\t\temail: getUserEmail(),\n\t\ttoken: getUserJwt(),\n\t};\n}\n\nfunction setUserName(name) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userName', name);\n}\n\nfunction setUserJwt(jwt) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userJwt', jwt);\n}\n\nfunction setUserEmail(email) {\n\tif (!hasLocalStorage()) {\n\t\treturn;\n\t}\n\n\twindow.localStorage.setItem('userEmail', email);\n}\n\nexport function setUserCredentials(name, email, jwt) {\n\tsetUserName(name);\n\tsetUserEmail(email);\n\tsetUserJwt(jwt);\n}\n","import idb from './';\n\nexport function saveUserAddresses(userEmail, addresses) {\n\treturn idb()\n\t\t.then(db => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tconst store = db.transaction('userAddress', 'readwrite')\n\t\t\t\t\t.objectStore('userAddress');\n\n\t\t\t\taddresses.forEach(ad => {\n\t\t\t\t\tconst putRequest = store.put({userEmail, ...ad});\n\n\t\t\t\t\tputRequest.onerror = function (event) {\n\t\t\t\t\t\tconsole.error(putRequest.error);\n\t\t\t\t\t\treject(putRequest.error);\n\t\t\t\t\t};\n\n\t\t\t\t\tputRequest.onsuccess = function (event) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\treturn Promise.resolve();\n\t\t});\n}\n","export default function idb(DBName = 'mech4u', DBVersion = 1) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (!('indexedDB' in window)) {\n\t\t\tconsole.error('Browser doesn\\'t support indexedDB');\n\t\t\treject(new Error('Browser doesn\\'t support indexedDB'));\n\t\t}\n\n\t\tconst request = window.indexedDB.open(DBName, DBVersion);\n\n\t\trequest.onerror = function (event) {\n\t\t\tconsole.error('Error opening indexedDB', request.error);\n\t\t\treject(request.error);\n\t\t};\n\n\t\trequest.onsuccess = function (event) {\n\t\t\tresolve(event.target.result);\n\t\t};\n\n\t\trequest.onupgradeneeded = function (event) {\n\t\t\tconst db = event.target.result;\n\n\t\t\tconst userStore = db.createObjectStore('userAddress', { keyPath: 'id' });\n\n\t\t\tuserStore.createIndex('userEmail', 'userEmail', { unique: false });\n\t\t\tuserStore.createIndex('id', 'id', { unique: true });\n\t\t};\n\t});\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AppBar from './components/AppBar';\nimport QuotationView from './views/Quotation';\nimport AppContext from './contexts/AppContext';\nimport { login, registerUser } from './libs/fetch/user';\nimport { setUserCredentials } from './libs/localStorage';\nimport { saveUserAddresses } from './libs/indexedDB/userDB';\nimport './App.scss';\n\nfunction App() {\n\tconst [user, setUser] = React.useState(null);\n\tconst [userLoading, setUserLoading] = React.useState(false);\n\tconst [snackbarOpen, setSnackbarOpen] = React.useState(false);\n\tconst [snackbarMessage, setSnackbarMessage] = React.useState('');\n\n\tReact.useEffect(() => {\n\t\tsetUser(JSON.parse(`{\"data\":{\"login\":{\"name\":\"Davi Souza\",\"email\":\"ddas.souza@gmail.com\",\"jwt\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQzMGU1YjdlLTE4ZmEtNDU3Ny1iYjFjLTJmYmIyNDIxYjgxMCIsIm5hbWUiOiJEYXZpIFNvdXphIiwiZW1haWwiOiJkZGFzLnNvdXphQGdtYWlsLmNvbSIsInBob25lX251bWJlciI6IjEyOTgxNzY0NTkzIiwiY3JlYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwidXBkYXRlZEF0IjoiMjAxOS0wOS0xN1QxNzo0Njo0OC4zNDZaIiwiZGVsZXRlZEF0IjpudWxsLCJhZGRyZXNzZXMiOlt7ImlkIjoiOGRjMWY3MWQtODlhMS00ZTg0LTgwYWUtMTI2MzVjNjJmOTdkIiwic3RhdGUiOiJTUCIsIm11bmljaXBhbGl0eSI6IlPDo28gSm9zw6kgZG9zIENhbXBvcyIsImFkZHJlc3MiOiJSdWEgUmVwdWJsaWNhIGRvIElyYXF1ZSIsImFkZHJlc3NfbnVtYmVyIjo4MCwiY29tcGxlbWVudCI6IkFwdCA2NEIiLCJwb3N0Y29kZSI6IjEyMjE2LTU0MCJ9XSwiaWF0IjoxNTY5ODM2Njc3LCJleHAiOjE1NzI0Mjg2Nzd9.hqDc7kh_jF10pRceaHUt2_2a9gKI68lP1AsTMvPDN70\",\"addresses\":[{\"id\":\"8dc1f71d-89a1-4e84-80ae-12635c62f97d\",\"state\":\"SP\",\"municipality\":\"São José dos Campos\",\"address\":\"Rua Republica do Iraque\",\"address_number\":80,\"complement\":\"Apt 64B\",\"postcode\":\"12216-540\"}]}}}`));\n\t}, []);\n\n\tfunction userLogin(email, password) {\n\t\tsetUserLoading(true);\n\n\t\tlogin(email, password)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error)\n\t\t\t.finally(() => {\n\t\t\t\tsetUserLoading(false);\n\t\t\t});\n\t}\n\n\tfunction userRegister(name, phoneNumber, email, password, addresses) {\n\t\tregisterUser(name, phoneNumber, email, password, addresses)\n\t\t\t.then(({data, error}) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tif (error.status !== 500) {\n\t\t\t\t\t\thandleOpenSnackbar(error.message);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t\t}\n\t\t\t\t} else if (data) {\n\t\t\t\t\tsetUser(data);\n\t\t\t\t\tsetUserCredentials(data.name, data.email, data.jwt);\n\t\t\t\t\tsaveUserAddresses(data.email, data.addresses);\n\t\t\t\t} else {\n\t\t\t\t\thandleOpenSnackbar('Houve um erro');\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.error);;\n\t}\n\n\tfunction handleOpenSnackbar(message) {\n\t\tsetSnackbarMessage(message);\n\t\tsetSnackbarOpen(true);\n\t}\n\n\tfunction handleCloseSnackbar() {\n\t\tsetSnackbarOpen(false);\n\t}\n\n\treturn (\n\t\t<AppContext.Provider value={{\n\t\t\tuser,\n\t\t\tuserLoading,\n\t\t\tuserLogin,\n\t\t\tuserRegister,\n\t\t\thandleOpenSnackbar,\n\t\t}}>\n\t\t\t<AppBar />\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/quotation\" component={QuotationView} />\n\t\t\t\t<Route render={() => <Redirect to=\"/quotation\" />} />\n\t\t\t</Switch>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'left',\n\t\t\t\t}}\n\t\t\t\topen={snackbarOpen}\n\t\t\t\tautoHideDuration={5000}\n\t\t\t\tonClose={handleCloseSnackbar}\n\t\t\t\tmessage={<span id=\"message-id\">{snackbarMessage}</span>}\n\t\t\t\taction={\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tonClick={handleCloseSnackbar}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t}\n\t\t\t/>\n\t\t</AppContext.Provider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\nimport 'typeface-roboto';\n\nconst platformTheme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#455a64', // rgb(69, 90, 100)\n\t\t\tdark: '#1c313a',\n\t\t\tlight: '#718792',\n\t\t\tcontrastText: '#ffffff',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#ef5350',\n\t\t\tdark: '#b61827',\n\t\t\tlight: '#ff867c',\n\t\t\tcontrastText: '#000000',\n\t\t},\n\t},\n});\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ThemeProvider theme={platformTheme}>\n\t\t\t<CssBaseline />\n\t\t\t<App />\n\t\t</ThemeProvider>\n\t</BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}